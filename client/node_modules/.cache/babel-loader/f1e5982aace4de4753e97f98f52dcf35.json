{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\n\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n\n  var resolvedValue;\n  var string = '';\n\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nvar CLASS_PART_SEPARATOR = '-';\n\nfunction createClassUtils(config) {\n  var classMap = createClassMap(config);\n  var conflictingClassGroups = config.conflictingClassGroups,\n      _config$conflictingCl = config.conflictingClassGroupModifiers,\n      conflictingClassGroupModifiers = _config$conflictingCl === void 0 ? {} : _config$conflictingCl;\n\n  function getClassGroupId(className) {\n    var classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n\n  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {\n    var conflicts = conflictingClassGroups[classGroupId] || [];\n\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [].concat(conflicts, conflictingClassGroupModifiers[classGroupId]);\n    }\n\n    return conflicts;\n  }\n\n  return {\n    getClassGroupId: getClassGroupId,\n    getConflictingClassGroupIds: getConflictingClassGroupIds\n  };\n}\n\nfunction getGroupRecursive(classParts, classPartObject) {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n\n  var currentClassPart = classParts[0];\n  var nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n\n  var classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(function (_ref) {\n    var validator = _ref.validator;\n    return validator(classRest);\n  })?.classGroupId;\n}\n\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\n\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    var property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\r\n * Exported for testing only\r\n */\n\n\nfunction createClassMap(config) {\n  var theme = config.theme,\n      prefix = config.prefix;\n  var classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(function (_ref2) {\n    var classGroupId = _ref2[0],\n        classGroup = _ref2[1];\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\n\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(function (classDefinition) {\n    if (typeof classDefinition === 'string') {\n      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId: classGroupId\n      });\n      return;\n    }\n\n    Object.entries(classDefinition).forEach(function (_ref3) {\n      var key = _ref3[0],\n          classGroup = _ref3[1];\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\n\nfunction getPart(classPartObject, path) {\n  var currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\n\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\n\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n\n  return classGroupEntries.map(function (_ref4) {\n    var classGroupId = _ref4[0],\n        classGroup = _ref4[1];\n    var prefixedClassGroup = classGroup.map(function (classDefinition) {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {\n          var key = _ref5[0],\n              value = _ref5[1];\n          return [prefix + key, value];\n        }));\n      }\n\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n} // LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\n\n\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: function get() {\n        return undefined;\n      },\n      set: function set() {}\n    };\n  }\n\n  var cacheSize = 0;\n  var cache = new Map();\n  var previousCache = new Map();\n\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n\n  return {\n    get: function get(key) {\n      var value = cache.get(key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set: function set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\n\nvar IMPORTANT_MODIFIER = '!';\n\nfunction createSplitModifiers(config) {\n  var separator = config.separator || ':';\n  var isSeparatorSingleCharacter = separator.length === 1;\n  var firstSeparatorCharacter = separator[0];\n  var separatorLength = separator.length; // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n\n  return function splitModifiers(className) {\n    var modifiers = [];\n    var bracketDepth = 0;\n    var modifierStart = 0;\n    var postfixModifierPosition;\n\n    for (var index = 0; index < className.length; index++) {\n      var currentCharacter = className[index];\n\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n\n    var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    var maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers: modifiers,\n      hasImportantModifier: hasImportantModifier,\n      baseClassName: baseClassName,\n      maybePostfixModifierPosition: maybePostfixModifierPosition\n    };\n  };\n}\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\n\n\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n\n  var sortedModifiers = [];\n  var unsortedModifiers = [];\n  modifiers.forEach(function (modifier) {\n    var isArbitraryVariant = modifier[0] === '[';\n\n    if (isArbitraryVariant) {\n      sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier]));\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());\n  return sortedModifiers;\n}\n\nfunction createConfigUtils(config) {\n  return {\n    cache: createLruCache(config.cacheSize),\n    splitModifiers: createSplitModifiers(config),\n    ...createClassUtils(config)\n  };\n}\n\nvar SPLIT_CLASSES_REGEX = /\\s+/;\n\nfunction mergeClassList(classList, configUtils) {\n  var splitModifiers = configUtils.splitModifiers,\n      getClassGroupId = configUtils.getClassGroupId,\n      getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */\n\n  var classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {\n    var _splitModifiers = splitModifiers(originalClassName),\n        modifiers = _splitModifiers.modifiers,\n        hasImportantModifier = _splitModifiers.hasImportantModifier,\n        baseClassName = _splitModifiers.baseClassName,\n        maybePostfixModifierPosition = _splitModifiers.maybePostfixModifierPosition;\n\n    var classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    var hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n\n    if (!classGroupId) {\n      if (!maybePostfixModifierPosition) {\n        return {\n          isTailwindClass: false,\n          originalClassName: originalClassName\n        };\n      }\n\n      classGroupId = getClassGroupId(baseClassName);\n\n      if (!classGroupId) {\n        return {\n          isTailwindClass: false,\n          originalClassName: originalClassName\n        };\n      }\n\n      hasPostfixModifier = false;\n    }\n\n    var variantModifier = sortModifiers(modifiers).join(':');\n    var modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId: modifierId,\n      classGroupId: classGroupId,\n      originalClassName: originalClassName,\n      hasPostfixModifier: hasPostfixModifier\n    };\n  }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(function (parsed) {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n\n    var modifierId = parsed.modifierId,\n        classGroupId = parsed.classGroupId,\n        hasPostfixModifier = parsed.hasPostfixModifier;\n    var classId = modifierId + classGroupId;\n\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(function (group) {\n      return classGroupsInConflict.add(modifierId + group);\n    });\n    return true;\n  }).reverse().map(function (parsed) {\n    return parsed.originalClassName;\n  }).join(' ');\n}\n\nfunction createTailwindMerge() {\n  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {\n    createConfig[_key] = arguments[_key];\n  }\n\n  var configUtils;\n  var cacheGet;\n  var cacheSet;\n  var functionToCall = initTailwindMerge;\n\n  function initTailwindMerge(classList) {\n    var firstCreateConfig = createConfig[0],\n        restCreateConfig = createConfig.slice(1);\n    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {\n      return createConfigCurrent(previousConfig);\n    }, firstCreateConfig());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n\n  function tailwindMerge(classList) {\n    var cachedResult = cacheGet(classList);\n\n    if (cachedResult) {\n      return cachedResult;\n    }\n\n    var result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\n\nfunction fromTheme(key) {\n  var themeGetter = function themeGetter(theme) {\n    return theme[key] || [];\n  };\n\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\n\nvar arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))/; // Shadow always begins with x and y offset separated by underscore\n\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\n\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value) || isArbitraryLength(value);\n}\n\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\n\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, 'size', isNever);\n}\n\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\n\nfunction isArbitraryUrl(value) {\n  return getIsArbitraryValue(value, 'url', isUrl);\n}\n\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\n/**\r\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\r\n */\n\n\nvar isArbitraryWeight = isArbitraryNumber;\n\nfunction isNumber(value) {\n  return !Number.isNaN(Number(value));\n}\n\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\n\nfunction isInteger(value) {\n  return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly);\n}\n\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\n\nfunction isAny() {\n  return true;\n}\n\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\n\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\n\nfunction getIsArbitraryValue(value, label, testValue) {\n  var result = arbitraryValueRegex.exec(value);\n\n  if (result) {\n    if (result[1]) {\n      return result[1] === label;\n    }\n\n    return testValue(result[2]);\n  }\n\n  return false;\n}\n\nfunction isLengthOnly(value) {\n  return lengthUnitRegex.test(value);\n}\n\nfunction isNever() {\n  return false;\n}\n\nfunction isUrl(value) {\n  return value.startsWith('url(');\n}\n\nfunction isIntegerOnly(value) {\n  return Number.isInteger(Number(value));\n}\n\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\n\nvar validators = {\n  __proto__: null,\n  isLength: isLength,\n  isArbitraryLength: isArbitraryLength,\n  isArbitrarySize: isArbitrarySize,\n  isArbitraryPosition: isArbitraryPosition,\n  isArbitraryUrl: isArbitraryUrl,\n  isArbitraryNumber: isArbitraryNumber,\n  isArbitraryWeight: isArbitraryWeight,\n  isNumber: isNumber,\n  isPercent: isPercent,\n  isInteger: isInteger,\n  isArbitraryValue: isArbitraryValue,\n  isAny: isAny,\n  isTshirtSize: isTshirtSize,\n  isArbitraryShadow: isArbitraryShadow\n};\n\nfunction getDefaultConfig() {\n  var colors = fromTheme('colors');\n  var spacing = fromTheme('spacing');\n  var blur = fromTheme('blur');\n  var brightness = fromTheme('brightness');\n  var borderColor = fromTheme('borderColor');\n  var borderRadius = fromTheme('borderRadius');\n  var borderSpacing = fromTheme('borderSpacing');\n  var borderWidth = fromTheme('borderWidth');\n  var contrast = fromTheme('contrast');\n  var grayscale = fromTheme('grayscale');\n  var hueRotate = fromTheme('hueRotate');\n  var invert = fromTheme('invert');\n  var gap = fromTheme('gap');\n  var gradientColorStops = fromTheme('gradientColorStops');\n  var gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  var inset = fromTheme('inset');\n  var margin = fromTheme('margin');\n  var opacity = fromTheme('opacity');\n  var padding = fromTheme('padding');\n  var saturate = fromTheme('saturate');\n  var scale = fromTheme('scale');\n  var sepia = fromTheme('sepia');\n  var skew = fromTheme('skew');\n  var space = fromTheme('space');\n  var translate = fromTheme('translate');\n\n  var getOverscroll = function getOverscroll() {\n    return ['auto', 'contain', 'none'];\n  };\n\n  var getOverflow = function getOverflow() {\n    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  };\n\n  var getSpacingWithAuto = function getSpacingWithAuto() {\n    return ['auto', spacing];\n  };\n\n  var getLengthWithEmpty = function getLengthWithEmpty() {\n    return ['', isLength];\n  };\n\n  var getNumberWithAutoAndArbitrary = function getNumberWithAutoAndArbitrary() {\n    return ['auto', isNumber, isArbitraryValue];\n  };\n\n  var getPositions = function getPositions() {\n    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  };\n\n  var getLineStyles = function getLineStyles() {\n    return ['solid', 'dashed', 'dotted', 'double', 'none'];\n  };\n\n  var getBlendModes = function getBlendModes() {\n    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];\n  };\n\n  var getAlign = function getAlign() {\n    return ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  };\n\n  var getZeroAndEmpty = function getZeroAndEmpty() {\n    return ['', '0', isArbitraryValue];\n  };\n\n  var getBreaks = function getBreaks() {\n    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  };\n\n  var getNumber = function getNumber() {\n    return [isNumber, isArbitraryNumber];\n  };\n\n  var getNumberAndArbitrary = function getNumberAndArbitrary() {\n    return [isNumber, isArbitraryValue];\n  };\n\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [isAny],\n      spacing: [isLength],\n      blur: ['none', '', isTshirtSize, isArbitraryLength],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n      borderSpacing: [spacing],\n      borderWidth: getLengthWithEmpty(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: [spacing],\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAuto(),\n      margin: getSpacingWithAuto(),\n      opacity: getNumber(),\n      padding: [spacing],\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: [spacing],\n      translate: [spacing]\n    },\n    classGroups: {\n      // Layout\n\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\n      container: ['container'],\n\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      \"float\": [{\n        \"float\": ['right', 'left', 'none']\n      }],\n\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none']\n      }],\n\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [].concat(getPositions(), [isArbitraryValue])\n      }],\n\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: [inset]\n      }],\n\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n\n      /**\r\n       * Start\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      start: [{\n        start: [inset]\n      }],\n\n      /**\r\n       * End\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      end: [{\n        end: [inset]\n      }],\n\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: [inset]\n      }],\n\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: [inset]\n      }],\n\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: [inset]\n      }],\n\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: ['auto', isInteger]\n      }],\n      // Flexbox and Grid\n\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: [spacing]\n      }],\n\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger]\n      }],\n\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: [isInteger]\n        }, isArbitraryValue]\n      }],\n\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger]\n        }, isArbitraryValue]\n      }],\n\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: [gap]\n      }],\n\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: ['normal'].concat(getAlign())\n      }],\n\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: ['normal'].concat(getAlign(), ['baseline'])\n      }],\n\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': [].concat(getAlign(), ['baseline'])\n      }],\n\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: [padding]\n      }],\n\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: [padding]\n      }],\n\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: [padding]\n      }],\n\n      /**\r\n       * Padding Start\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      ps: [{\n        ps: [padding]\n      }],\n\n      /**\r\n       * Padding End\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pe: [{\n        pe: [padding]\n      }],\n\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: [padding]\n      }],\n\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: [padding]\n      }],\n\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: [padding]\n      }],\n\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: [padding]\n      }],\n\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: [margin]\n      }],\n\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: [margin]\n      }],\n\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: [margin]\n      }],\n\n      /**\r\n       * Margin Start\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ms: [{\n        ms: [margin]\n      }],\n\n      /**\r\n       * Margin End\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      me: [{\n        me: [margin]\n      }],\n\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: [margin]\n      }],\n\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: [margin]\n      }],\n\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: [margin]\n      }],\n\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: [margin]\n      }],\n\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', spacing]\n      }],\n\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: [spacing, 'auto', 'min', 'max', 'fit']\n      }],\n\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': [spacing, 'min', 'max', 'fit']\n      }],\n      // Typography\n\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryLength]\n      }],\n\n      /**\r\n       * Line Clamp\r\n       * @see https://tailwindcss.com/docs/line-clamp\r\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength]\n      }],\n\n      /**\r\n       * List Style Image\r\n       * @see https://tailwindcss.com/docs/list-style-image\r\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [].concat(getLineStyles(), ['wavy'])\n      }],\n\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength]\n      }],\n\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength]\n      }],\n\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: [spacing]\n      }],\n\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryLength]\n      }],\n\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      \"break\": [{\n        \"break\": ['normal', 'words', 'all', 'keep']\n      }],\n\n      /**\r\n       * Hyphens\r\n       * @see https://tailwindcss.com/docs/hyphens\r\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [].concat(getPositions(), [isArbitraryPosition])\n      }],\n\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryUrl]\n      }],\n\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n\n      /**\r\n       * Gradient Color Stops From Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n\n      /**\r\n       * Gradient Color Stops Via Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n\n      /**\r\n       * Gradient Color Stops To Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Start Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Start End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius End End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius End Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Start\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width End\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: [''].concat(getLineStyles())\n      }],\n\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength]\n      }],\n\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: [isLength]\n      }],\n\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w': [{\n        ring: getLengthWithEmpty()\n      }],\n\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w-inset': ['ring-inset'],\n\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength]\n      }],\n\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n\n      /**\r\n       * Mix Beldn Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: [blur]\n      }],\n\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: [invert]\n      }],\n\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n\n      /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n\n      /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n\n      /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n\n      /**\r\n       * Caption Side\r\n       * @see https://tailwindcss.com/docs/caption-side\r\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: [scale]\n      }],\n\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: ['appearance-none'],\n\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Start\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ms': [{\n        'scroll-ms': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin End\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-me': [{\n        'scroll-me': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Start\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-ps': [{\n        'scroll-ps': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding End\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pe': [{\n        'scroll-pe': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': [spacing]\n      }],\n\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {\n          pan: ['x', 'left', 'right', 'y', 'up', 'down']\n        }]\n      }],\n\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryNumber]\n      }],\n\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\n      sr: ['sr-only', 'not-sr-only']\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n}\n\nvar twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\n\nfunction mergeConfigs(baseConfig, configExtension) {\n  for (var key in configExtension) {\n    mergePropertyRecursively(baseConfig, key, configExtension[key]);\n  }\n\n  return baseConfig;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar overrideTypes = /*#__PURE__*/new Set(['string', 'number', 'boolean']);\n\nfunction mergePropertyRecursively(baseObject, mergeKey, mergeValue) {\n  if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {\n    baseObject[mergeKey] = mergeValue;\n    return;\n  }\n\n  if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n    baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);\n    return;\n  }\n\n  if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n    if (baseObject[mergeKey] === null) {\n      baseObject[mergeKey] = mergeValue;\n      return;\n    }\n\n    for (var nextKey in mergeValue) {\n      mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);\n    }\n  }\n}\n\nfunction extendTailwindMerge(configExtension) {\n  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    createConfig[_key - 1] = arguments[_key];\n  }\n\n  return typeof configExtension === 'function' ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function () {\n    return mergeConfigs(getDefaultConfig(), configExtension);\n  }].concat(createConfig));\n}\n/**\r\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\r\n */\n\n\nvar join = twJoin;\nexports.createTailwindMerge = createTailwindMerge;\nexports.extendTailwindMerge = extendTailwindMerge;\nexports.fromTheme = fromTheme;\nexports.getDefaultConfig = getDefaultConfig;\nexports.join = join;\nexports.mergeConfigs = mergeConfigs;\nexports.twJoin = twJoin;\nexports.twMerge = twMerge;\nexports.validators = validators;","map":{"version":3,"mappings":";;;;;AAAA;;;;;;;;AAQG;;SAMaA,SAAM;AAClB,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,QAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,SAAOH,KAAK,GAAGI,SAAS,CAACC,MAAzB,EAAiC;AAC7B,QAAKJ,QAAQ,GAAGG,SAAS,CAACJ,KAAK,EAAN,CAAzB,EAAqC;AACjC,UAAKE,aAAa,GAAGI,OAAO,CAACL,QAAD,CAA5B,EAAyC;AACrCE,cAAM,KAAKA,MAAM,IAAI,GAAf,CAANA;AACAA,cAAM,IAAID,aAAVC;AACH;AACJ;AACJ;;AACD,SAAOA,MAAP;AACJ;;AAEA,SAASG,OAAT,CAAiBC,GAAjB,EAA6C;AACzC,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOA,GAAP;AACH;;AAED,MAAIL,aAAJ;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACF,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;AACjC,QAAID,GAAG,CAACC,CAAD,CAAP,EAAY;AACR,UAAKN,aAAa,GAAGI,OAAO,CAACC,GAAG,CAACC,CAAD,CAAJ,CAA5B,EAAkE;AAC9DL,cAAM,KAAKA,MAAM,IAAI,GAAf,CAANA;AACAA,cAAM,IAAID,aAAVC;AACH;AACJ;AACJ;;AAED,SAAOA,MAAP;AACJ;;ACpCA,IAAMM,oBAAoB,GAAG,GAA7B;;AAEM,SAAUC,gBAAV,CAA2BC,MAA3B,EAAyC;AAC3C,MAAMC,QAAQ,GAAGC,cAAc,CAACF,MAAD,CAA/B;AACA,MAAQG,sBAAsB,GAA0CH,MAAM,CAAtEG,sBAAR;AAAA,MAA8BC,qBAA0CJ,SAAM,CAA9CK,8BAAhC;AAAA,MAAgCA,8BAA8B,sCAAG,EAAH,GAAKD,qBAAnE;;AAEA,WAASE,eAAT,CAAyBC,SAAzB,EAA0C;AACtC,QAAMC,UAAU,GAAGD,SAAS,CAACE,KAAVF,CAAgBT,oBAAhBS,CAAnB,CADsC,CAGtC;;AACA,QAAIC,UAAU,CAAC,CAAD,CAAVA,KAAkB,EAAlBA,IAAwBA,UAAU,CAACd,MAAXc,KAAsB,CAAlD,EAAqD;AACjDA,gBAAU,CAACE,KAAXF;AACH;;AAED,WAAOG,iBAAiB,CAACH,UAAD,EAAaP,QAAb,CAAjBU,IAA2CC,8BAA8B,CAACL,SAAD,CAAhF;AACJ;;AAEA,WAASM,2BAAT,CAAqCC,YAArC,EAAiEC,kBAAjE,EAA4F;AACxF,QAAMC,SAAS,GAAGb,sBAAsB,CAACW,YAAD,CAAtBX,IAAwC,EAA1D;;AAEA,QAAIY,kBAAkB,IAAIV,8BAA8B,CAACS,YAAD,CAAxD,EAAwE;AACpE,uBAAWE,SAAX,EAAyBX,8BAA8B,CAACS,YAAD,CAAvD;AACH;;AAED,WAAOE,SAAP;AACJ;;AAEA,SAAO;AACHV,mBAAe,EAAfA,eADG;AAEHO,+BAA2B,EAA3BA;AAFG,GAAP;AAIJ;;AAEA,SAASF,iBAAT,CACIH,UADJ,EAEIS,eAFJ,EAEoC;AAEhC,MAAIT,UAAU,CAACd,MAAXc,KAAsB,CAA1B,EAA6B;AACzB,WAAOS,eAAe,CAACH,YAAvB;AACH;;AAED,MAAMI,gBAAgB,GAAGV,UAAU,CAAC,CAAD,CAAnC;AACA,MAAMW,mBAAmB,GAAGF,eAAe,CAACG,QAAhBH,CAAyBI,GAAzBJ,CAA6BC,gBAA7BD,CAA5B;AACA,MAAMK,2BAA2B,GAAGH,mBAAmB,GACjDR,iBAAiB,CAACH,UAAU,CAACe,KAAXf,CAAiB,CAAjBA,CAAD,EAAsBW,mBAAtB,CADgC,GAEjDK,SAFN;;AAIA,MAAIF,2BAAJ,EAAiC;AAC7B,WAAOA,2BAAP;AACH;;AAED,MAAIL,eAAe,CAACQ,UAAhBR,CAA2BvB,MAA3BuB,KAAsC,CAA1C,EAA6C;AACzC,WAAOO,SAAP;AACH;;AAED,MAAME,SAAS,GAAGlB,UAAU,CAACmB,IAAXnB,CAAgBV,oBAAhBU,CAAlB;AAEA,SAAOS,eAAe,CAACQ,UAAhBR,CAA2BW,IAA3BX,CAAgC;AAAA,QAAGY,SAAS,QAATA,SAAH;AAAY,WAAOA,SAAS,CAACH,SAAD,CAAhB;AAA2B,GAAvET,GAA0EH,YAAjF;AACJ;;AAEA,IAAMgB,sBAAsB,GAAG,YAA/B;;AAEA,SAASlB,8BAAT,CAAwCL,SAAxC,EAAyD;AACrD,MAAIuB,sBAAsB,CAACC,IAAvBD,CAA4BvB,SAA5BuB,CAAJ,EAA4C;AACxC,QAAME,0BAA0B,GAAGF,sBAAsB,CAACG,IAAvBH,CAA4BvB,SAA5BuB,EAAwC,CAAxCA,CAAnC;AACA,QAAMI,QAAQ,GAAGF,0BAA0B,EAAEG,SAA5BH,CACb,CADaA,EAEbA,0BAA0B,CAACI,OAA3BJ,CAAmC,GAAnCA,CAFaA,CAAjB;;AAKA,QAAIE,QAAJ,EAAc;AACV;AACA,aAAO,gBAAgBA,QAAvB;AACH;AACJ;AACL;AAEA;;AAEG;;;AACG,SAAUhC,cAAV,CAAyBF,MAAzB,EAAuC;AACzC,MAAQqC,KAAK,GAAarC,MAAM,CAAxBqC,KAAR;AAAA,MAAeC,MAAM,GAAKtC,MAAM,CAAjBsC,MAAf;AACA,MAAMrC,QAAQ,GAAoB;AAC9BmB,YAAQ,EAAE,IAAImB,GAAJ,EADoB;AAE9Bd,cAAU,EAAE;AAFkB,GAAlC;AAKA,MAAMe,yBAAyB,GAAGC,4BAA4B,CAC1DC,MAAM,CAACC,OAAPD,CAAe1C,MAAM,CAAC4C,WAAtBF,CAD0D,EAE1DJ,MAF0D,CAA9D;AAKAE,2BAAyB,CAACK,OAA1BL,CAAkC,UAA+BM,KAA/B,EAA+B;AAAA,QAA7BhC,YAAY,WAAiB;AAAA,QAAfiC,UAAU,WAAK;AAC7DC,6BAAyB,CAACD,UAAD,EAAa9C,QAAb,EAAuBa,YAAvB,EAAqCuB,KAArC,CAAzBW;AACH,GAFDR;AAIA,SAAOvC,QAAP;AACJ;;AAEA,SAAS+C,yBAAT,CACID,UADJ,EAEI9B,eAFJ,EAGIH,YAHJ,EAIIuB,KAJJ,EAIsB;AAElBU,YAAU,CAACF,OAAXE,CAAmB,UAACE,eAAD,EAAoB;AACnC,QAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,UAAMC,qBAAqB,GACvBD,eAAe,KAAK,EAApBA,GAAyBhC,eAAzBgC,GAA2CE,OAAO,CAAClC,eAAD,EAAkBgC,eAAlB,CADtD;AAEAC,2BAAqB,CAACpC,YAAtBoC,GAAqCpC,YAArCoC;AACA;AACH;;AAED,QAAI,OAAOD,eAAP,KAA2B,UAA/B,EAA2C;AACvC,UAAIG,aAAa,CAACH,eAAD,CAAjB,EAAoC;AAChCD,iCAAyB,CACrBC,eAAe,CAACZ,KAAD,CADM,EAErBpB,eAFqB,EAGrBH,YAHqB,EAIrBuB,KAJqB,CAAzBW;AAMA;AACH;;AAED/B,qBAAe,CAACQ,UAAhBR,CAA2BoC,IAA3BpC,CAAgC;AAC5BY,iBAAS,EAAEoB,eADiB;AAE5BnC,oBAAY,EAAZA;AAF4B,OAAhCG;AAKA;AACH;;AAEDyB,UAAM,CAACC,OAAPD,CAAeO,eAAfP,EAAgCG,OAAhCH,CAAwC,UAAsBY,KAAtB,EAAsB;AAAA,UAApBC,GAAG,WAAiB;AAAA,UAAfR,UAAU,WAAK;AAC1DC,+BAAyB,CACrBD,UADqB,EAErBI,OAAO,CAAClC,eAAD,EAAkBsC,GAAlB,CAFc,EAGrBzC,YAHqB,EAIrBuB,KAJqB,CAAzBW;AAMH,KAPDN;AAQH,GAnCDK;AAoCJ;;AAEA,SAASI,OAAT,CAAiBlC,eAAjB,EAAmDuC,IAAnD,EAA+D;AAC3D,MAAIC,sBAAsB,GAAGxC,eAA7B;AAEAuC,MAAI,CAAC/C,KAAL+C,CAAW1D,oBAAX0D,EAAiCX,OAAjCW,CAAyC,UAACE,QAAD,EAAa;AAClD,QAAI,CAACD,sBAAsB,CAACrC,QAAvBqC,CAAgCE,GAAhCF,CAAoCC,QAApCD,CAAL,EAAoD;AAChDA,4BAAsB,CAACrC,QAAvBqC,CAAgCG,GAAhCH,CAAoCC,QAApCD,EAA8C;AAC1CrC,gBAAQ,EAAE,IAAImB,GAAJ,EADgC;AAE1Cd,kBAAU,EAAE;AAF8B,OAA9CgC;AAIH;;AAEDA,0BAAsB,GAAGA,sBAAsB,CAACrC,QAAvBqC,CAAgCpC,GAAhCoC,CAAoCC,QAApCD,CAAzBA;AACH,GATDD;AAWA,SAAOC,sBAAP;AACJ;;AAEA,SAASL,aAAT,CAAuBS,IAAvB,EAAyD;AACrD,SAAQA,IAAoB,CAACT,aAA7B;AACJ;;AAEA,SAASX,4BAAT,CACIqB,iBADJ,EAEIxB,MAFJ,EAE8B;AAE1B,MAAI,CAACA,MAAL,EAAa;AACT,WAAOwB,iBAAP;AACH;;AAED,SAAOA,iBAAiB,CAACC,GAAlBD,CAAsB,UAA+BE,KAA/B,EAA+B;AAAA,QAA7BlD,YAAY,WAAiB;AAAA,QAAfiC,UAAU,WAAK;AACxD,QAAMkB,kBAAkB,GAAGlB,UAAU,CAACgB,GAAXhB,CAAe,UAACE,eAAD,EAAoB;AAC1D,UAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,eAAOX,MAAM,GAAGW,eAAhB;AACH;;AAED,UAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,eAAOP,MAAM,CAACwB,WAAPxB,CACHA,MAAM,CAACC,OAAPD,CAAeO,eAAfP,EAAgCqB,GAAhCrB,CAAoC;AAAA,cAAEa,GAAG,WAAL;AAAA,cAAOY,KAAK,WAAZ;AAAY,iBAAM,CAAC7B,MAAM,GAAGiB,GAAV,EAAeY,KAAf,CAAN;AAA2B,SAA3EzB,CADGA,CAAP;AAGH;;AAED,aAAOO,eAAP;AACH,KAZ0BF,CAA3B;AAcA,WAAO,CAACjC,YAAD,EAAemD,kBAAf,CAAP;AACH,GAhBMH,CAAP;AAiBJ,C,CCnMA;;;AACM,SAAUM,cAAV,CAAqCC,YAArC,EAAyD;AAC3D,MAAIA,YAAY,GAAG,CAAnB,EAAsB;AAClB,WAAO;AACHhD,SAAG,EAAE;AAAA,eAAMG,SAAN;AAAe,OADjB;AAEHoC,SAAG,EAAE,eAAK,CAAE;AAFT,KAAP;AAIH;;AAED,MAAIU,SAAS,GAAG,CAAhB;AACA,MAAIC,KAAK,GAAG,IAAIhC,GAAJ,EAAZ;AACA,MAAIiC,aAAa,GAAG,IAAIjC,GAAJ,EAApB;;AAEA,WAASkC,MAAT,CAAgBlB,GAAhB,EAA0BY,KAA1B,EAAsC;AAClCI,SAAK,CAACX,GAANW,CAAUhB,GAAVgB,EAAeJ,KAAfI;AACAD,aAAS;;AAET,QAAIA,SAAS,GAAGD,YAAhB,EAA8B;AAC1BC,eAAS,GAAG,CAAZA;AACAE,mBAAa,GAAGD,KAAhBC;AACAD,WAAK,GAAG,IAAIhC,GAAJ,EAARgC;AACH;AACL;;AAEA,SAAO;AACHlD,OAAG,eAACkC,GAAD,EAAI;AACH,UAAIY,KAAK,GAAGI,KAAK,CAAClD,GAANkD,CAAUhB,GAAVgB,CAAZ;;AAEA,UAAIJ,KAAK,KAAK3C,SAAd,EAAyB;AACrB,eAAO2C,KAAP;AACH;;AACD,UAAI,CAACA,KAAK,GAAGK,aAAa,CAACnD,GAAdmD,CAAkBjB,GAAlBiB,CAAT,MAAqChD,SAAzC,EAAoD;AAChDiD,cAAM,CAAClB,GAAD,EAAMY,KAAN,CAANM;AACA,eAAON,KAAP;AACH;AACJ,KAXE;AAYHP,OAAG,EAACL,kBAAKY,KAALZ,EAAU;AACV,UAAIgB,KAAK,CAACZ,GAANY,CAAUhB,GAAVgB,CAAJ,EAAoB;AAChBA,aAAK,CAACX,GAANW,CAAUhB,GAAVgB,EAAeJ,KAAfI;AACH,OAFD,MAEO;AACHE,cAAM,CAAClB,GAAD,EAAMY,KAAN,CAANM;AACH;AACL;AAlBG,GAAP;AAoBJ;;ACjDO,IAAMC,kBAAkB,GAAG,GAA3B;;AAED,SAAUC,oBAAV,CAA+B3E,MAA/B,EAA6C;AAC/C,MAAM4E,SAAS,GAAG5E,MAAM,CAAC4E,SAAP5E,IAAoB,GAAtC;AACA,MAAM6E,0BAA0B,GAAGD,SAAS,CAAClF,MAAVkF,KAAqB,CAAxD;AACA,MAAME,uBAAuB,GAAGF,SAAS,CAAC,CAAD,CAAzC;AACA,MAAMG,eAAe,GAAGH,SAAS,CAAClF,MAAlC,CAJ+C,CAM/C;;AACA,SAAO,SAASsF,cAAT,CAAwBzE,SAAxB,EAAyC;AAC5C,QAAM0E,SAAS,GAAG,EAAlB;AAEA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,uBAAJ;;AAEA,SAAK,IAAI/F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkB,SAAS,CAACb,MAAtC,EAA8CL,KAAK,EAAnD,EAAuD;AACnD,UAAIgG,gBAAgB,GAAG9E,SAAS,CAAClB,KAAD,CAAhC;;AAEA,UAAI6F,YAAY,KAAK,CAArB,EAAwB;AACpB,YACIG,gBAAgB,KAAKP,uBAArBO,KACCR,0BAA0B,IACvBtE,SAAS,CAACgB,KAAVhB,CAAgBlB,KAAhBkB,EAAuBlB,KAAK,GAAG0F,eAA/BxE,MAAoDqE,SAFxDS,CADJ,EAIE;AACEJ,mBAAS,CAAC5B,IAAV4B,CAAe1E,SAAS,CAACgB,KAAVhB,CAAgB4E,aAAhB5E,EAA+BlB,KAA/BkB,CAAf0E;AACAE,uBAAa,GAAG9F,KAAK,GAAG0F,eAAxBI;AACA;AACH;;AAED,YAAIE,gBAAgB,KAAK,GAAzB,EAA8B;AAC1BD,iCAAuB,GAAG/F,KAA1B+F;AACA;AACH;AACJ;;AAED,UAAIC,gBAAgB,KAAK,GAAzB,EAA8B;AAC1BH,oBAAY;AACf,OAFD,MAEO,IAAIG,gBAAgB,KAAK,GAAzB,EAA8B;AACjCH,oBAAY;AACf;AACJ;;AAED,QAAMI,kCAAkC,GACpCL,SAAS,CAACvF,MAAVuF,KAAqB,CAArBA,GAAyB1E,SAAzB0E,GAAqC1E,SAAS,CAAC4B,SAAV5B,CAAoB4E,aAApB5E,CADzC;AAEA,QAAMgF,oBAAoB,GACtBD,kCAAkC,CAACE,UAAnCF,CAA8CZ,kBAA9CY,CADJ;AAEA,QAAMG,aAAa,GAAGF,oBAAoB,GACpCD,kCAAkC,CAACnD,SAAnCmD,CAA6C,CAA7CA,CADoC,GAEpCA,kCAFN;AAIA,QAAMI,4BAA4B,GAC9BN,uBAAuB,IAAIA,uBAAuB,GAAGD,aAArDC,GACMA,uBAAuB,GAAGD,aADhCC,GAEM5D,SAHV;AAKA,WAAO;AACHyD,eAAS,EAATA,SADG;AAEHM,0BAAoB,EAApBA,oBAFG;AAGHE,mBAAa,EAAbA,aAHG;AAIHC,kCAA4B,EAA5BA;AAJG,KAAP;AAMH,GArDD;AAsDJ;AAEA;;;;AAIG;;;AACG,SAAUC,aAAV,CAAwBV,SAAxB,EAA2C;AAC7C,MAAIA,SAAS,CAACvF,MAAVuF,IAAoB,CAAxB,EAA2B;AACvB,WAAOA,SAAP;AACH;;AAED,MAAMW,eAAe,GAAa,EAAlC;AACA,MAAIC,iBAAiB,GAAa,EAAlC;AAEAZ,WAAS,CAACpC,OAAVoC,CAAkB,UAACa,QAAD,EAAa;AAC3B,QAAMC,kBAAkB,GAAGD,QAAQ,CAAC,CAAD,CAARA,KAAgB,GAA3C;;AAEA,QAAIC,kBAAJ,EAAwB;AACpBH,qBAAe,CAACvC,IAAhBuC,CAAoBI,KAApBJ,kBAAwBC,iBAAiB,CAACI,IAAlBJ,GAA0BC,MAA1BD,CAA0BC,UAA1BD,CAAxBD;AACAC,uBAAiB,GAAG,EAApBA;AACH,KAHD,MAGO;AACHA,uBAAiB,CAACxC,IAAlBwC,CAAuBC,QAAvBD;AACH;AACJ,GATDZ;AAWAW,iBAAe,CAACvC,IAAhBuC,wBAAwBC,iBAAiB,CAACI,IAAlBJ,EAAxBD;AAEA,SAAOA,eAAP;AACJ;;ACvFM,SAAUM,iBAAV,CAA4BlG,MAA5B,EAA0C;AAC5C,SAAO;AACHuE,SAAK,EAAEH,cAAc,CAAiBpE,MAAM,CAACsE,SAAxB,CADlB;AAEHU,kBAAc,EAAEL,oBAAoB,CAAC3E,MAAD,CAFjC;AAGH,OAAGD,gBAAgB,CAACC,MAAD;AAHhB,GAAP;AAKJ;;ACVA,IAAMmG,mBAAmB,GAAG,KAA5B;;AAEgB,wBAAeC,SAAf,EAAkCC,WAAlC,EAA0D;AACtE,MAAQrB,cAAc,GAAmDqB,WAAW,CAA5ErB,cAAR;AAAA,MAAwB1E,eAAe,GAAkC+F,WAAW,CAA5D/F,eAAxB;AAAA,MAAyCO,2BAA2B,GAAKwF,WAAW,CAA3CxF,2BAAzC;AAEA;;;;;;AAMG;;AACH,MAAMyF,qBAAqB,GAAG,IAAIC,GAAJ,EAA9B;AAEA,SACIH,SAAS,CACJI,IADLJ,GAEK3F,KAFL2F,CAEWD,mBAFXC,EAGKrC,GAHLqC,CAGS,UAACK,iBAAD,EAAsB;AACvB,QAKIzB,gCAAc,CAACyB,iBAAD,CALlB;AAAA,QACIxB,SAAS,mBAATA,SADJ;AAAA,QAEIM,oBAAoB,mBAApBA,oBAFJ;AAAA,QAGIE,aAAa,mBAAbA,aAHJ;AAAA,QAIIC,4BAA4B,mBAA5BA,4BAJJ;;AAOA,QAAI5E,YAAY,GAAGR,eAAe,CAC9BoF,4BAA4B,GACtBD,aAAa,CAACtD,SAAdsD,CAAwB,CAAxBA,EAA2BC,4BAA3BD,CADsB,GAEtBA,aAHwB,CAAlC;AAMA,QAAI1E,kBAAkB,GAAG2F,OAAO,CAAChB,4BAAD,CAAhC;;AAEA,QAAI,CAAC5E,YAAL,EAAmB;AACf,UAAI,CAAC4E,4BAAL,EAAmC;AAC/B,eAAO;AACHiB,yBAAe,EAAE,KADd;AAEHF,2BAAiB,EAAjBA;AAFG,SAAP;AAIH;;AAED3F,kBAAY,GAAGR,eAAe,CAACmF,aAAD,CAA9B3E;;AAEA,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO;AACH6F,yBAAe,EAAE,KADd;AAEHF,2BAAiB,EAAjBA;AAFG,SAAP;AAIH;;AAED1F,wBAAkB,GAAG,KAArBA;AACH;;AAED,QAAM6F,eAAe,GAAGjB,aAAa,CAACV,SAAD,CAAbU,CAAyBhE,IAAzBgE,CAA8B,GAA9BA,CAAxB;AAEA,QAAMkB,UAAU,GAAGtB,oBAAoB,GACjCqB,eAAe,GAAGlC,kBADe,GAEjCkC,eAFN;AAIA,WAAO;AACHD,qBAAe,EAAE,IADd;AAEHE,gBAAU,EAAVA,UAFG;AAGH/F,kBAAY,EAAZA,YAHG;AAIH2F,uBAAiB,EAAjBA,iBAJG;AAKH1F,wBAAkB,EAAlBA;AALG,KAAP;AAOH,GApDLqF,EAqDKU,OArDLV,GAsDI;AAtDJA,GAuDKW,MAvDLX,CAuDY,UAACY,MAAD,EAAW;AACf,QAAI,CAACA,MAAM,CAACL,eAAZ,EAA6B;AACzB,aAAO,IAAP;AACH;;AAED,QAAQE,UAAU,GAAuCG,MAAM,CAAvDH,UAAR;AAAA,QAAoB/F,YAAY,GAAyBkG,MAAM,CAA3ClG,YAApB;AAAA,QAAkCC,kBAAkB,GAAKiG,MAAM,CAA7BjG,kBAAlC;AAEA,QAAMkG,OAAO,GAAGJ,UAAU,GAAG/F,YAA7B;;AAEA,QAAIwF,qBAAqB,CAAC3C,GAAtB2C,CAA0BW,OAA1BX,CAAJ,EAAwC;AACpC,aAAO,KAAP;AACH;;AAEDA,yBAAqB,CAACY,GAAtBZ,CAA0BW,OAA1BX;AAEAzF,+BAA2B,CAACC,YAAD,EAAeC,kBAAf,CAA3BF,CAA8DgC,OAA9DhC,CAAsE,UAACsG,KAAD,EAAM;AAAA,aACxEb,qBAAqB,CAACY,GAAtBZ,CAA0BO,UAAU,GAAGM,KAAvCb,CADwE;AAE3E,KAFDzF;AAIA,WAAO,IAAP;AACH,GA3ELuF,EA4EKU,OA5ELV,GA6EKrC,GA7ELqC,CA6ES,UAACY,MAAD,EAAO;AAAA,WAAKA,MAAM,CAACP,iBAAZ;AAA6B,GA7E7CL,EA8EKzE,IA9ELyE,CA8EU,GA9EVA,CADJ;AAiFJ;;ACxFgB,+BACqD;AAAA,oCAA9DgB,YAA8D;AAA9DA,gBAA8D,MAA9DA,GAA8D3H,eAA9D2H;AAA8D;;AAEjE,MAAIf,WAAJ;AACA,MAAIgB,QAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,cAAc,GAAGC,iBAArB;;AAEA,WAASA,iBAAT,CAA2BpB,SAA3B,EAA4C;AACxC,QAAOqB,iBAAiB,GAAyBL,YAAY,GAA7D;AAAA,QAA6BM,gBAAgB,GAAIN,YAAY,MAAZA,CAAY,CAAZA,CAAjD;AAEA,QAAMpH,MAAM,GAAG0H,gBAAgB,CAACC,MAAjBD,CACX,UAACE,cAAD,EAAiBC,mBAAjB,EAAoC;AAAA,aAAKA,mBAAmB,CAACD,cAAD,CAAxB;AACpCH,KAFWC,EAEXD,iBAAiB,EAFNC,CAAf;AAKArB,eAAW,GAAGH,iBAAiB,CAAClG,MAAD,CAA/BqG;AACAgB,YAAQ,GAAGhB,WAAW,CAAC9B,KAAZ8B,CAAkBhF,GAA7BgG;AACAC,YAAQ,GAAGjB,WAAW,CAAC9B,KAAZ8B,CAAkBzC,GAA7B0D;AACAC,kBAAc,GAAGO,aAAjBP;AAEA,WAAOO,aAAa,CAAC1B,SAAD,CAApB;AACJ;;AAEA,WAAS0B,aAAT,CAAuB1B,SAAvB,EAAwC;AACpC,QAAM2B,YAAY,GAAGV,QAAQ,CAACjB,SAAD,CAA7B;;AAEA,QAAI2B,YAAJ,EAAkB;AACd,aAAOA,YAAP;AACH;;AAED,QAAMC,MAAM,GAAGC,cAAc,CAAC7B,SAAD,EAAYC,WAAZ,CAA7B;AACAiB,YAAQ,CAAClB,SAAD,EAAY4B,MAAZ,CAARV;AAEA,WAAOU,MAAP;AACJ;;AAEA,SAAO,SAASE,iBAAT,GAA0B;AAC7B,WAAOX,cAAc,CAACnI,MAAM,CAAC4G,KAAP5G,CAAa,IAAbA,EAAmBK,SAAnBL,CAAD,CAArB;AACH,GAFD;AAGJ;;AChDM,SAAU+I,SAAV,CAAoB5E,GAApB,EAA+B;AACjC,MAAM6E,WAAW,GAAG,SAAdA,WAAc,CAAC/F,KAAD,EAAmB;AAAA,WAAKA,KAAK,CAACkB,GAAD,CAALlB,IAAc,EAAnB;AAAqB,GAA5D;;AAEA+F,aAAW,CAAChF,aAAZgF,GAA4B,IAA5BA;AAEA,SAAOA,WAAP;AACJ;;ACRA,IAAMC,mBAAmB,GAAG,4BAA5B;AACA,IAAMC,aAAa,GAAG,YAAtB;AACA,IAAMC,aAAa,gBAAG,IAAIhC,GAAJ,CAAQ,CAAC,IAAD,EAAO,MAAP,EAAe,QAAf,CAAR,CAAtB;AACA,IAAMiC,eAAe,GAAG,kCAAxB;AACA,IAAMC,eAAe,GACjB,0FADJ,C,CAEA;;AACA,IAAMC,WAAW,GAAG,wDAApB;;AAEM,SAAUC,QAAV,CAAmBxE,KAAnB,EAAgC;AAClC,SACIyE,QAAQ,CAACzE,KAAD,CAARyE,IACAL,aAAa,CAAC5E,GAAd4E,CAAkBpE,KAAlBoE,CADAK,IAEAN,aAAa,CAACvG,IAAduG,CAAmBnE,KAAnBmE,CAFAM,IAGAC,iBAAiB,CAAC1E,KAAD,CAJrB;AAMJ;;AAEM,SAAU0E,iBAAV,CAA4B1E,KAA5B,EAAyC;AAC3C,SAAO2E,mBAAmB,CAAC3E,KAAD,EAAQ,QAAR,EAAkB4E,YAAlB,CAA1B;AACJ;;AAEM,SAAUC,eAAV,CAA0B7E,KAA1B,EAAuC;AACzC,SAAO2E,mBAAmB,CAAC3E,KAAD,EAAQ,MAAR,EAAgB8E,OAAhB,CAA1B;AACJ;;AAEM,SAAUC,mBAAV,CAA8B/E,KAA9B,EAA2C;AAC7C,SAAO2E,mBAAmB,CAAC3E,KAAD,EAAQ,UAAR,EAAoB8E,OAApB,CAA1B;AACJ;;AAEM,SAAUE,cAAV,CAAyBhF,KAAzB,EAAsC;AACxC,SAAO2E,mBAAmB,CAAC3E,KAAD,EAAQ,KAAR,EAAeiF,KAAf,CAA1B;AACJ;;AAEM,SAAUC,iBAAV,CAA4BlF,KAA5B,EAAyC;AAC3C,SAAO2E,mBAAmB,CAAC3E,KAAD,EAAQ,QAAR,EAAkByE,QAAlB,CAA1B;AACJ;AAEA;;AAEG;;;AACI,IAAMU,iBAAiB,GAAGD,iBAA1B;;AAED,SAAUT,QAAV,CAAmBzE,KAAnB,EAAgC;AAClC,SAAO,CAACoF,MAAM,CAACC,KAAPD,CAAaA,MAAM,CAACpF,KAAD,CAAnBoF,CAAR;AACJ;;AAEM,SAAUE,SAAV,CAAoBtF,KAApB,EAAiC;AACnC,SAAOA,KAAK,CAACuF,QAANvF,CAAe,GAAfA,KAAuByE,QAAQ,CAACzE,KAAK,CAAC5C,KAAN4C,CAAY,CAAZA,EAAe,CAAC,CAAhBA,CAAD,CAAtC;AACJ;;AAEM,SAAUwF,SAAV,CAAoBxF,KAApB,EAAiC;AACnC,SAAOyF,aAAa,CAACzF,KAAD,CAAbyF,IAAwBd,mBAAmB,CAAC3E,KAAD,EAAQ,QAAR,EAAkByF,aAAlB,CAAlD;AACJ;;AAEM,SAAUC,gBAAV,CAA2B1F,KAA3B,EAAwC;AAC1C,SAAOkE,mBAAmB,CAACtG,IAApBsG,CAAyBlE,KAAzBkE,CAAP;AACJ;;SAEgByB,QAAK;AACjB,SAAO,IAAP;AACJ;;AAEM,SAAUC,YAAV,CAAuB5F,KAAvB,EAAoC;AACtC,SAAOqE,eAAe,CAACzG,IAAhByG,CAAqBrE,KAArBqE,CAAP;AACJ;;AAEM,SAAUwB,iBAAV,CAA4B7F,KAA5B,EAAyC;AAC3C,SAAO2E,mBAAmB,CAAC3E,KAAD,EAAQ,EAAR,EAAY8F,QAAZ,CAA1B;AACJ;;AAEA,SAASnB,mBAAT,CAA6B3E,KAA7B,EAA4C+F,KAA5C,EAA2DC,SAA3D,EAAgG;AAC5F,MAAMnC,MAAM,GAAGK,mBAAmB,CAACpG,IAApBoG,CAAyBlE,KAAzBkE,CAAf;;AAEA,MAAIL,MAAJ,EAAY;AACR,QAAIA,MAAM,CAAC,CAAD,CAAV,EAAe;AACX,aAAOA,MAAM,CAAC,CAAD,CAANA,KAAckC,KAArB;AACH;;AAED,WAAOC,SAAS,CAACnC,MAAM,CAAC,CAAD,CAAP,CAAhB;AACH;;AAED,SAAO,KAAP;AACJ;;AAEA,SAASe,YAAT,CAAsB5E,KAAtB,EAAmC;AAC/B,SAAOsE,eAAe,CAAC1G,IAAhB0G,CAAqBtE,KAArBsE,CAAP;AACJ;;AAEA,SAASQ,OAAT,GAAgB;AACZ,SAAO,KAAP;AACJ;;AAEA,SAASG,KAAT,CAAejF,KAAf,EAA4B;AACxB,SAAOA,KAAK,CAACqB,UAANrB,CAAiB,MAAjBA,CAAP;AACJ;;AAEA,SAASyF,aAAT,CAAuBzF,KAAvB,EAAoC;AAChC,SAAOoF,MAAM,CAACI,SAAPJ,CAAiBA,MAAM,CAACpF,KAAD,CAAvBoF,CAAP;AACJ;;AAEA,SAASU,QAAT,CAAkB9F,KAAlB,EAA+B;AAC3B,SAAOuE,WAAW,CAAC3G,IAAZ2G,CAAiBvE,KAAjBuE,CAAP;AACJ;;;;;;;;;;;;;;;;;;;;SCrFgB0B,mBAAgB;AAC5B,MAAMC,MAAM,GAAGlC,SAAS,CAAC,QAAD,CAAxB;AACA,MAAMmC,OAAO,GAAGnC,SAAS,CAAC,SAAD,CAAzB;AACA,MAAMoC,IAAI,GAAGpC,SAAS,CAAC,MAAD,CAAtB;AACA,MAAMqC,UAAU,GAAGrC,SAAS,CAAC,YAAD,CAA5B;AACA,MAAMsC,WAAW,GAAGtC,SAAS,CAAC,aAAD,CAA7B;AACA,MAAMuC,YAAY,GAAGvC,SAAS,CAAC,cAAD,CAA9B;AACA,MAAMwC,aAAa,GAAGxC,SAAS,CAAC,eAAD,CAA/B;AACA,MAAMyC,WAAW,GAAGzC,SAAS,CAAC,aAAD,CAA7B;AACA,MAAM0C,QAAQ,GAAG1C,SAAS,CAAC,UAAD,CAA1B;AACA,MAAM2C,SAAS,GAAG3C,SAAS,CAAC,WAAD,CAA3B;AACA,MAAM4C,SAAS,GAAG5C,SAAS,CAAC,WAAD,CAA3B;AACA,MAAM6C,MAAM,GAAG7C,SAAS,CAAC,QAAD,CAAxB;AACA,MAAM8C,GAAG,GAAG9C,SAAS,CAAC,KAAD,CAArB;AACA,MAAM+C,kBAAkB,GAAG/C,SAAS,CAAC,oBAAD,CAApC;AACA,MAAMgD,0BAA0B,GAAGhD,SAAS,CAAC,4BAAD,CAA5C;AACA,MAAMiD,KAAK,GAAGjD,SAAS,CAAC,OAAD,CAAvB;AACA,MAAMkD,MAAM,GAAGlD,SAAS,CAAC,QAAD,CAAxB;AACA,MAAMmD,OAAO,GAAGnD,SAAS,CAAC,SAAD,CAAzB;AACA,MAAMoD,OAAO,GAAGpD,SAAS,CAAC,SAAD,CAAzB;AACA,MAAMqD,QAAQ,GAAGrD,SAAS,CAAC,UAAD,CAA1B;AACA,MAAMsD,KAAK,GAAGtD,SAAS,CAAC,OAAD,CAAvB;AACA,MAAMuD,KAAK,GAAGvD,SAAS,CAAC,OAAD,CAAvB;AACA,MAAMwD,IAAI,GAAGxD,SAAS,CAAC,MAAD,CAAtB;AACA,MAAMyD,KAAK,GAAGzD,SAAS,CAAC,OAAD,CAAvB;AACA,MAAM0D,SAAS,GAAG1D,SAAS,CAAC,WAAD,CAA3B;;AAEA,MAAM2D,aAAa,GAAG,SAAhBA,aAAgB,GAAH;AAAA,WAAS,CAAC,MAAD,EAAS,SAAT,EAAoB,MAApB,CAAT;AAA6C,GAAhE;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAH;AAAA,WAAS,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC,QAAtC,CAAT;AAAiE,GAAlF;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAH;AAAA,WAAS,CAAC,MAAD,EAAS1B,OAAT,CAAT;AAAmC,GAA3D;;AACA,MAAM2B,kBAAkB,GAAG,SAArBA,kBAAqB,GAAH;AAAA,WAAS,CAAC,EAAD,EAAKtD,QAAL,CAAT;AAAgC,GAAxD;;AACA,MAAMuD,6BAA6B,GAAG,SAAhCA,6BAAgC,GAAH;AAAA,WAAS,CAAC,MAAD,EAAStD,QAAT,EAAmBiB,gBAAnB,CAAT;AAAsD,GAAzF;;AACA,MAAMsC,YAAY,GAAG,SAAfA,YAAe,GAAH;AAAA,WACd,CACI,QADJ,EAEI,QAFJ,EAGI,MAHJ,EAII,aAJJ,EAKI,UALJ,EAMI,OANJ,EAOI,cAPJ,EAQI,WARJ,EASI,KATJ,CADc;AAWJ,GAXd;;AAYA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAH;AAAA,WAAS,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,QAA9B,EAAwC,MAAxC,CAAT;AAAiE,GAApF;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAH;AAAA,WACf,CACI,QADJ,EAEI,UAFJ,EAGI,QAHJ,EAII,SAJJ,EAKI,QALJ,EAMI,SANJ,EAOI,aAPJ,EAQI,YARJ,EASI,YATJ,EAUI,YAVJ,EAWI,YAXJ,EAYI,WAZJ,EAaI,KAbJ,EAcI,YAdJ,EAeI,OAfJ,EAgBI,YAhBJ,EAiBI,cAjBJ,CADe;AAmBL,GAnBd;;AAoBA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAH;AAAA,WACV,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,SAA3B,EAAsC,QAAtC,EAAgD,QAAhD,EAA0D,SAA1D,CADU;AACmE,GADjF;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAH;AAAA,WAAS,CAAC,EAAD,EAAK,GAAL,EAAU1C,gBAAV,CAAT;AAA6C,GAAlE;;AACA,MAAM2C,SAAS,GAAG,SAAZA,SAAY,GAAH;AAAA,WACX,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,MAAvC,EAA+C,MAA/C,EAAuD,OAAvD,EAAgE,QAAhE,CADW;AACuE,GADtF;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAH;AAAA,WAAS,CAAC7D,QAAD,EAAWS,iBAAX,CAAT;AAAsC,GAArD;;AACA,MAAMqD,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAH;AAAA,WAAS,CAAC9D,QAAD,EAAWiB,gBAAX,CAAT;AAAqC,GAAhE;;AAEA,SAAO;AACHvF,aAAS,EAAE,GADR;AAEHjC,SAAK,EAAE;AACHgI,YAAM,EAAE,CAACP,KAAD,CADL;AAEHQ,aAAO,EAAE,CAAC3B,QAAD,CAFN;AAGH4B,UAAI,EAAE,CAAC,MAAD,EAAS,EAAT,EAAaR,YAAb,EAA2BlB,iBAA3B,CAHH;AAIH2B,gBAAU,EAAEiC,SAAS,EAJlB;AAKHhC,iBAAW,EAAE,CAACJ,MAAD,CALV;AAMHK,kBAAY,EAAE,CAAC,MAAD,EAAS,EAAT,EAAa,MAAb,EAAqBX,YAArB,EAAmClB,iBAAnC,CANX;AAOH8B,mBAAa,EAAE,CAACL,OAAD,CAPZ;AAQHM,iBAAW,EAAEqB,kBAAkB,EAR5B;AASHpB,cAAQ,EAAE4B,SAAS,EAThB;AAUH3B,eAAS,EAAEyB,eAAe,EAVvB;AAWHxB,eAAS,EAAE2B,qBAAqB,EAX7B;AAYH1B,YAAM,EAAEuB,eAAe,EAZpB;AAaHtB,SAAG,EAAE,CAACX,OAAD,CAbF;AAcHY,wBAAkB,EAAE,CAACb,MAAD,CAdjB;AAeHc,gCAA0B,EAAE,CAAC1B,SAAD,EAAYZ,iBAAZ,CAfzB;AAgBHuC,WAAK,EAAEY,kBAAkB,EAhBtB;AAiBHX,YAAM,EAAEW,kBAAkB,EAjBvB;AAkBHV,aAAO,EAAEmB,SAAS,EAlBf;AAmBHlB,aAAO,EAAE,CAACjB,OAAD,CAnBN;AAoBHkB,cAAQ,EAAEiB,SAAS,EApBhB;AAqBHhB,WAAK,EAAEgB,SAAS,EArBb;AAsBHf,WAAK,EAAEa,eAAe,EAtBnB;AAuBHZ,UAAI,EAAEe,qBAAqB,EAvBxB;AAwBHd,WAAK,EAAE,CAACtB,OAAD,CAxBJ;AAyBHuB,eAAS,EAAE,CAACvB,OAAD;AAzBR,KAFJ;AA6BH1H,eAAW,EAAE;AACT;;AACA;;;AAGG;AACH+J,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B9C,gBAA5B;AAAV,OAAD,CANC;;AAOT;;;AAGG;AACH+C,eAAS,EAAE,CAAC,WAAD,CAXF;;AAYT;;;AAGG;AACHC,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAAC9C,YAAD;AAAX,OAAD,CAhBA;;AAiBT;;;AAGG;AACH,qBAAe,CAAC;AAAE,uBAAeyC,SAAS;AAA1B,OAAD,CArBN;;AAsBT;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgBA,SAAS;AAA3B,OAAD,CA1BP;;AA2BT;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,YAAlB,EAAgC,cAAhC;AAAlB,OAAD,CA/BP;;AAgCT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAAC,OAAD,EAAU,OAAV;AAApB,OAAD,CApCT;;AAqCT;;;AAGG;AACHM,SAAG,EAAE,CAAC;AAAEA,WAAG,EAAE,CAAC,QAAD,EAAW,SAAX;AAAP,OAAD,CAzCI;;AA0CT;;;AAGG;AACHC,aAAO,EAAE,CACL,OADK,EAEL,cAFK,EAGL,QAHK,EAIL,MAJK,EAKL,aALK,EAML,OANK,EAOL,cAPK,EAQL,eARK,EASL,YATK,EAUL,cAVK,EAWL,oBAXK,EAYL,oBAZK,EAaL,oBAbK,EAcL,iBAdK,EAeL,WAfK,EAgBL,WAhBK,EAiBL,MAjBK,EAkBL,aAlBK,EAmBL,UAnBK,EAoBL,WApBK,EAqBL,QArBK,CA9CA;;AAqET;;;AAGG;AACH,eAAO,CAAC;AAAE,iBAAO,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB;AAAT,OAAD,CAzEE;;AA0ET;;;AAGG;AACHC,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,MAA1B;AAAT,OAAD,CA9EE;;AA+ET;;;AAGG;AACHC,eAAS,EAAE,CAAC,SAAD,EAAY,gBAAZ,CAnFF;;AAoFT;;;AAGG;AACH,oBAAc,CAAC;AAAEC,cAAM,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,YAArC;AAAV,OAAD,CAxFL;;AAyFT;;;AAGG;AACH,yBAAmB,CAAC;AAAEA,cAAM,EAAMf,sBAAY,EAAZA,EAAc,CAAEtC,gBAAF,CAAdsC;AAAd,OAAD,CA7FV;;AA8FT;;;AAGG;AACHgB,cAAQ,EAAE,CAAC;AAAEA,gBAAQ,EAAEpB,WAAW;AAAvB,OAAD,CAlGD;;AAmGT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAcA,WAAW;AAA3B,OAAD,CAvGL;;AAwGT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAcA,WAAW;AAA3B,OAAD,CA5GL;;AA6GT;;;AAGG;AACHqB,gBAAU,EAAE,CAAC;AAAEA,kBAAU,EAAEtB,aAAa;AAA3B,OAAD,CAjHH;;AAkHT;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgBA,aAAa;AAA/B,OAAD,CAtHP;;AAuHT;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgBA,aAAa;AAA/B,OAAD,CA3HP;;AA4HT;;;AAGG;AACHuB,cAAQ,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,UAApB,EAAgC,UAAhC,EAA4C,QAA5C,CAhID;;AAiIT;;;AAGG;AACHjC,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAACA,KAAD;AAAT,OAAD,CArIE;;AAsIT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAACA,KAAD;AAAb,OAAD,CA1IF;;AA2IT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAACA,KAAD;AAAb,OAAD,CA/IF;;AAgJT;;;AAGG;AACHkC,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAAClC,KAAD;AAAT,OAAD,CApJE;;AAqJT;;;AAGG;AACHmC,SAAG,EAAE,CAAC;AAAEA,WAAG,EAAE,CAACnC,KAAD;AAAP,OAAD,CAzJI;;AA0JT;;;AAGG;AACHoC,SAAG,EAAE,CAAC;AAAEA,WAAG,EAAE,CAACpC,KAAD;AAAP,OAAD,CA9JI;;AA+JT;;;AAGG;AACHqC,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAACrC,KAAD;AAAT,OAAD,CAnKE;;AAoKT;;;AAGG;AACHsC,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAACtC,KAAD;AAAV,OAAD,CAxKC;;AAyKT;;;AAGG;AACHuC,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE,CAACvC,KAAD;AAAR,OAAD,CA7KG;;AA8KT;;;AAGG;AACHwC,gBAAU,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,CAlLH;;AAmLT;;;AAGG;AACHC,OAAC,EAAE,CAAC;AAAEA,SAAC,EAAE,CAAC,MAAD,EAASlE,SAAT;AAAL,OAAD,CAvLM;AAwLT;;AACA;;;AAGG;AACHmE,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAACxD,OAAD;AAAT,OAAD,CA7LE;;AA8LT;;;AAGG;AACH,wBAAkB,CAAC;AAAEyD,YAAI,EAAE,CAAC,KAAD,EAAQ,aAAR,EAAuB,KAAvB,EAA8B,aAA9B;AAAR,OAAD,CAlMT;;AAmMT;;;AAGG;AACH,mBAAa,CAAC;AAAEA,YAAI,EAAE,CAAC,MAAD,EAAS,cAAT,EAAyB,QAAzB;AAAR,OAAD,CAvMJ;;AAwMT;;;AAGG;AACHA,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE,CAAC,GAAD,EAAM,MAAN,EAAc,SAAd,EAAyB,MAAzB,EAAiClE,gBAAjC;AAAR,OAAD,CA5MG;;AA6MT;;;AAGG;AACHmE,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAEzB,eAAe;AAAvB,OAAD,CAjNG;;AAkNT;;;AAGG;AACH0B,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE1B,eAAe;AAAzB,OAAD,CAtNC;;AAuNT;;;AAGG;AACH2B,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0BvE,SAA1B;AAAT,OAAD,CA3NE;;AA4NT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACG,KAAD;AAAf,OAAD,CAhOJ;;AAiOT;;;AAGG;AACH,uBAAiB,CAAC;AAAEqE,WAAG,EAAE,CAAC,MAAD,EAAS;AAAEC,cAAI,EAAE,CAACzE,SAAD;AAAR,SAAT,EAAgCE,gBAAhC;AAAP,OAAD,CArOR;;AAsOT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAaqC,6BAA6B;AAA5C,OAAD,CA1OJ;;AA2OT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAWA,6BAA6B;AAA1C,OAAD,CA/OF;;AAgPT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACpC,KAAD;AAAf,OAAD,CApPJ;;AAqPT;;;AAGG;AACH,uBAAiB,CAAC;AAAEuE,WAAG,EAAE,CAAC,MAAD,EAAS;AAAED,cAAI,EAAE,CAACzE,SAAD;AAAR,SAAT,EAAgCE,gBAAhC;AAAP,OAAD,CAzPR;;AA0PT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAaqC,6BAA6B;AAA5C,OAAD,CA9PJ;;AA+PT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAWA,6BAA6B;AAA1C,OAAD,CAnQF;;AAoQT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,WAAxB,EAAqC,WAArC;AAAf,OAAD,CAxQJ;;AAyQT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,IAAvB,EAA6BrC,gBAA7B;AAAf,OAAD,CA7QJ;;AA8QT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,IAAvB,EAA6BA,gBAA7B;AAAf,OAAD,CAlRJ;;AAmRT;;;AAGG;AACHoB,SAAG,EAAE,CAAC;AAAEA,WAAG,EAAE,CAACA,GAAD;AAAP,OAAD,CAvRI;;AAwRT;;;AAGG;AACH,eAAS,CAAC;AAAE,iBAAS,CAACA,GAAD;AAAX,OAAD,CA5RA;;AA6RT;;;AAGG;AACH,eAAS,CAAC;AAAE,iBAAS,CAACA,GAAD;AAAX,OAAD,CAjSA;;AAkST;;;AAGG;AACH,yBAAmB,CAAC;AAAEqD,eAAO,EAAG,WAAahC,MAAb,CAAaA,QAAQ,EAArB;AAAZ,OAAD,CAtSV;;AAuST;;;AAGG;AACH,uBAAiB,CAAC;AAAE,yBAAiB,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,SAA3B;AAAnB,OAAD,CA3SR;;AA4ST;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,SAAnC;AAAlB,OAAD,CAhTP;;AAiTT;;;AAGG;AACH,uBAAiB,CAAC;AAAEiC,eAAO,GAAG,QAAH,EAAWC,MAAX,CAAgBlC,QAAQ,EAAxB,EAA0B,CAAE,UAAF,CAA1B;AAAT,OAAD,CArTR;;AAsTT;;;AAGG;AACH,qBAAe,CAAC;AAAEmC,aAAK,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,UAA3B,EAAuC,SAAvC;AAAT,OAAD,CA1TN;;AA2TT;;;AAGG;AACH,oBAAc,CAAC;AAAEC,YAAI,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,SAAnC,EAA8C,UAA9C;AAAR,OAAD,CA/TL;;AAgUT;;;AAGG;AACH,uBAAiB,CAAC;AAAE,yBAAqBpC,kBAAQ,EAARA,EAAU,CAAE,UAAF,CAAVA;AAAvB,OAAD,CApUR;;AAqUT;;;AAGG;AACH,qBAAe,CAAC;AAAE,uBAAe,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,UAA3B,EAAuC,SAAvC;AAAjB,OAAD,CAzUN;;AA0UT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,SAAnC;AAAhB,OAAD,CA9UL;AA+UT;;AACA;;;AAGG;AACHqC,OAAC,EAAE,CAAC;AAAEA,SAAC,EAAE,CAACpD,OAAD;AAAL,OAAD,CApVM;;AAqVT;;;AAGG;AACHqD,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACrD,OAAD;AAAN,OAAD,CAzVK;;AA0VT;;;AAGG;AACHsD,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACtD,OAAD;AAAN,OAAD,CA9VK;;AA+VT;;;AAGG;AACHuD,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACvD,OAAD;AAAN,OAAD,CAnWK;;AAoWT;;;AAGG;AACHwD,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACxD,OAAD;AAAN,OAAD,CAxWK;;AAyWT;;;AAGG;AACHyD,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACzD,OAAD;AAAN,OAAD,CA7WK;;AA8WT;;;AAGG;AACH0D,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAAC1D,OAAD;AAAN,OAAD,CAlXK;;AAmXT;;;AAGG;AACH2D,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAAC3D,OAAD;AAAN,OAAD,CAvXK;;AAwXT;;;AAGG;AACH4D,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAAC5D,OAAD;AAAN,OAAD,CA5XK;;AA6XT;;;AAGG;AACH6D,OAAC,EAAE,CAAC;AAAEA,SAAC,EAAE,CAAC/D,MAAD;AAAL,OAAD,CAjYM;;AAkYT;;;AAGG;AACHgE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAAChE,MAAD;AAAN,OAAD,CAtYK;;AAuYT;;;AAGG;AACHiE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACjE,MAAD;AAAN,OAAD,CA3YK;;AA4YT;;;AAGG;AACHkE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAAClE,MAAD;AAAN,OAAD,CAhZK;;AAiZT;;;AAGG;AACHmE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACnE,MAAD;AAAN,OAAD,CArZK;;AAsZT;;;AAGG;AACHoE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACpE,MAAD;AAAN,OAAD,CA1ZK;;AA2ZT;;;AAGG;AACHqE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACrE,MAAD;AAAN,OAAD,CA/ZK;;AAgaT;;;AAGG;AACHsE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACtE,MAAD;AAAN,OAAD,CApaK;;AAqaT;;;AAGG;AACHuE,QAAE,EAAE,CAAC;AAAEA,UAAE,EAAE,CAACvE,MAAD;AAAN,OAAD,CAzaK;;AA0aT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAACO,KAAD;AAAb,OAAD,CA9aF;;AA+aT;;;AAGG;AACH,yBAAmB,CAAC,iBAAD,CAnbV;;AAobT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAACA,KAAD;AAAb,OAAD,CAxbF;;AAybT;;;AAGG;AACH,yBAAmB,CAAC,iBAAD,CA7bV;AA8bT;;AACA;;;AAGG;AACHiE,OAAC,EAAE,CAAC;AAAEA,SAAC,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8BvF,OAA9B;AAAL,OAAD,CAncM;;AAocT;;;AAGG;AACH,eAAS,CAAC;AAAE,iBAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB3B,QAAtB;AAAX,OAAD,CAxcA;;AAycT;;;AAGG;AACH,eAAS,CACL;AACI,iBAAS,CACL,GADK,EAEL,MAFK,EAGL,MAHK,EAIL,KAJK,EAKL,KALK,EAML,KANK,EAOL,OAPK,EAQL;AAAEmH,gBAAM,EAAE,CAAC/F,YAAD;AAAV,SARK,EASLA,YATK,EAULlB,iBAVK;AADb,OADK,CA7cA;;AA6dT;;;AAGG;AACHkH,OAAC,EAAE,CAAC;AAAEA,SAAC,EAAE,CAACzF,OAAD,EAAU,MAAV,EAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AAAL,OAAD,CAjeM;;AAkeT;;;AAGG;AACH,eAAS,CAAC;AAAE,iBAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB3B,QAAtB;AAAX,OAAD,CAteA;;AAueT;;;AAGG;AACH,eAAS,CAAC;AAAE,iBAAS,CAAC2B,OAAD,EAAU,KAAV,EAAiB,KAAjB,EAAwB,KAAxB;AAAX,OAAD,CA3eA;AA4eT;;AACA;;;AAGG;AACH,mBAAa,CAAC;AAAE0F,YAAI,EAAE,CAAC,MAAD,EAASjG,YAAT,EAAuBlB,iBAAvB;AAAR,OAAD,CAjfJ;;AAkfT;;;AAGG;AACH,wBAAkB,CAAC,aAAD,EAAgB,sBAAhB,CAtfT;;AAufT;;;AAGG;AACH,oBAAc,CAAC,QAAD,EAAW,YAAX,CA3fL;;AA4fT;;;AAGG;AACH,qBAAe,CACX;AACIoH,YAAI,EAAE,CACF,MADE,EAEF,YAFE,EAGF,OAHE,EAIF,QAJE,EAKF,QALE,EAMF,UANE,EAOF,MAPE,EAQF,WARE,EASF,OATE,EAUF5G,iBAVE;AADV,OADW,CAhgBN;;AAghBT;;;AAGG;AACH,qBAAe,CAAC;AAAE4G,YAAI,EAAE,CAACnG,KAAD;AAAR,OAAD,CAphBN;;AAqhBT;;;AAGG;AACH,oBAAc,CAAC,aAAD,CAzhBL;;AA0hBT;;;AAGG;AACH,qBAAe,CAAC,SAAD,CA9hBN;;AA+hBT;;;AAGG;AACH,0BAAoB,CAAC,cAAD,CAniBX;;AAoiBT;;;AAGG;AACH,oBAAc,CAAC,aAAD,EAAgB,eAAhB,CAxiBL;;AAyiBT;;;AAGG;AACH,qBAAe,CAAC,mBAAD,EAAsB,cAAtB,CA7iBN;;AA8iBT;;;AAGG;AACH,sBAAgB,CAAC,oBAAD,EAAuB,kBAAvB,CAljBP;;AAmjBT;;;AAGG;AACHoG,cAAQ,EAAE,CACN;AACIA,gBAAQ,EAAE,CACN,SADM,EAEN,OAFM,EAGN,QAHM,EAIN,MAJM,EAKN,OALM,EAMN,QANM,EAONrH,iBAPM;AADd,OADM,CAvjBD;;AAokBT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAAC,MAAD,EAASD,QAAT,EAAmBS,iBAAnB;AAAhB,OAAD,CAxkBL;;AAykBT;;;AAGG;AACH8G,aAAO,EAAE,CACL;AAAEA,eAAO,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,QAA1B,EAAoC,SAApC,EAA+C,OAA/C,EAAwDxH,QAAxD;AAAX,OADK,CA7kBA;;AAglBT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAAC,MAAD,EAASkB,gBAAT;AAAhB,OAAD,CAplBL;;AAqlBT;;;AAGG;AACH,yBAAmB,CAAC;AAAEuG,YAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EAA4BvG,gBAA5B;AAAR,OAAD,CAzlBV;;AA0lBT;;;AAGG;AACH,6BAAuB,CAAC;AAAEuG,YAAI,EAAE,CAAC,QAAD,EAAW,SAAX;AAAR,OAAD,CA9lBd;;AA+lBT;;;;AAIG;AACH,2BAAqB,CAAC;AAAEC,mBAAW,EAAE,CAAChG,MAAD;AAAf,OAAD,CApmBZ;;AAqmBT;;;AAGG;AACH,6BAAuB,CAAC;AAAE,+BAAuB,CAACiB,OAAD;AAAzB,OAAD,CAzmBd;;AA0mBT;;;AAGG;AACH,wBAAkB,CAAC;AAAE0E,YAAI,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC,OAAvC,EAAgD,KAAhD;AAAR,OAAD,CA9mBT;;AA+mBT;;;AAGG;AACH,oBAAc,CAAC;AAAEA,YAAI,EAAE,CAAC3F,MAAD;AAAR,OAAD,CAnnBL;;AAonBT;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgB,CAACiB,OAAD;AAAlB,OAAD,CAxnBP;;AAynBT;;;AAGG;AACH,yBAAmB,CAAC,WAAD,EAAc,UAAd,EAA0B,cAA1B,EAA0C,cAA1C,CA7nBV;;AA8nBT;;;AAGG;AACH,+BAAyB,CAAC;AAAEgF,kBAAU,EAAMlE,uBAAa,EAAbA,EAAe,CAAE,MAAF,CAAfA;AAAlB,OAAD,CAloBhB;;AAmoBT;;;AAGG;AACH,mCAA6B,CAAC;AAAEkE,kBAAU,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB3H,QAAtB;AAAd,OAAD,CAvoBpB;;AAwoBT;;;AAGG;AACH,0BAAoB,CAAC;AAAE,4BAAoB,CAAC,MAAD,EAASA,QAAT;AAAtB,OAAD,CA5oBX;;AA6oBT;;;AAGG;AACH,+BAAyB,CAAC;AAAE2H,kBAAU,EAAE,CAACjG,MAAD;AAAd,OAAD,CAjpBhB;;AAkpBT;;;AAGG;AACH,wBAAkB,CAAC,WAAD,EAAc,WAAd,EAA2B,YAA3B,EAAyC,aAAzC,CAtpBT;;AAupBT;;;AAGG;AACH,uBAAiB,CAAC,UAAD,EAAa,eAAb,EAA8B,WAA9B,CA3pBR;;AA4pBT;;;AAGG;AACHkG,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAACjG,OAAD;AAAV,OAAD,CAhqBC;;AAiqBT;;;AAGG;AACH,wBAAkB,CACd;AACIkG,aAAK,EAAE,CACH,UADG,EAEH,KAFG,EAGH,QAHG,EAIH,QAJG,EAKH,UALG,EAMH,aANG,EAOH,KAPG,EAQH,OARG,EASH3H,iBATG;AADX,OADc,CArqBT;;AAorBT;;;AAGG;AACH4H,gBAAU,EAAE,CACR;AAAEA,kBAAU,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,KAArB,EAA4B,UAA5B,EAAwC,UAAxC,EAAoD,cAApD;AAAd,OADQ,CAxrBH;;AA2rBT;;;AAGG;AACH,eAAO,CAAC;AAAE,iBAAO,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,MAA3B;AAAT,OAAD,CA/rBE;;AAgsBT;;;AAGG;AACHC,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB;AAAX,OAAD,CApsBA;;AAqsBT;;;AAGG;AACHnC,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAAC,MAAD,EAAS1E,gBAAT;AAAX,OAAD,CAzsBA;AA0sBT;;AACA;;;AAGG;AACH,uBAAiB,CAAC;AAAE8G,UAAE,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB;AAAN,OAAD,CA/sBR;;AAgtBT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,MAAjC;AAAb,OAAD,CAptBF;;AAqtBT;;;;AAIG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACrF,OAAD;AAAhB,OAAD,CA1tBL;;AA2tBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;AAAf,OAAD,CA/tBJ;;AAguBT;;;AAGG;AACH,qBAAe,CAAC;AAAEqF,UAAE,EAAMxE,sBAAY,EAAZA,EAAc,CAAEjD,mBAAF,CAAdiD;AAAV,OAAD,CApuBN;;AAquBT;;;AAGG;AACH,mBAAa,CAAC;AAAEwE,UAAE,EAAE,CAAC,WAAD,EAAc;AAAEC,gBAAM,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,OAAf,EAAwB,OAAxB;AAAV,SAAd;AAAN,OAAD,CAzuBJ;;AA0uBT;;;AAGG;AACH,iBAAW,CAAC;AAAED,UAAE,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B3H,eAA7B;AAAN,OAAD,CA9uBF;;AA+uBT;;;AAGG;AACH,kBAAY,CACR;AACI2H,UAAE,EAAE,CACA,MADA,EAEA;AAAE,yBAAe,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,GAAlC,EAAuC,IAAvC;AAAjB,SAFA,EAGAxH,cAHA;AADR,OADQ,CAnvBH;;AA4vBT;;;AAGG;AACH,kBAAY,CAAC;AAAEwH,UAAE,EAAE,CAACtG,MAAD;AAAN,OAAD,CAhwBH;;AAiwBT;;;AAGG;AACH,2BAAqB,CAAC;AAAEwG,YAAI,EAAE,CAAC1F,0BAAD;AAAR,OAAD,CArwBZ;;AAswBT;;;AAGG;AACH,0BAAoB,CAAC;AAAE2F,WAAG,EAAE,CAAC3F,0BAAD;AAAP,OAAD,CA1wBX;;AA2wBT;;;AAGG;AACH,yBAAmB,CAAC;AAAE4F,UAAE,EAAE,CAAC5F,0BAAD;AAAN,OAAD,CA/wBV;;AAgxBT;;;AAGG;AACH,uBAAiB,CAAC;AAAE0F,YAAI,EAAE,CAAC3F,kBAAD;AAAR,OAAD,CApxBR;;AAqxBT;;;AAGG;AACH,sBAAgB,CAAC;AAAE4F,WAAG,EAAE,CAAC5F,kBAAD;AAAP,OAAD,CAzxBP;;AA0xBT;;;AAGG;AACH,qBAAe,CAAC;AAAE6F,UAAE,EAAE,CAAC7F,kBAAD;AAAN,OAAD,CA9xBN;AA+xBT;;AACA;;;AAGG;AACH8F,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAACtG,YAAD;AAAX,OAAD,CApyBA;;AAqyBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,YAAD;AAAf,OAAD,CAzyBJ;;AA0yBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,YAAD;AAAf,OAAD,CA9yBJ;;AA+yBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,YAAD;AAAf,OAAD,CAnzBJ;;AAozBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,YAAD;AAAf,OAAD,CAxzBJ;;AAyzBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,YAAD;AAAf,OAAD,CA7zBJ;;AA8zBT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,YAAD;AAAf,OAAD,CAl0BJ;;AAm0BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CAv0BL;;AAw0BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CA50BL;;AA60BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CAj1BL;;AAk1BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CAt1BL;;AAu1BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CA31BL;;AA41BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CAh2BL;;AAi2BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CAr2BL;;AAs2BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACA,YAAD;AAAhB,OAAD,CA12BL;;AA22BT;;;AAGG;AACH,kBAAY,CAAC;AAAEuG,cAAM,EAAE,CAACrG,WAAD;AAAV,OAAD,CA/2BH;;AAg3BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAp3BL;;AAq3BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAz3BL;;AA03BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CA93BL;;AA+3BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAn4BL;;AAo4BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAx4BL;;AAy4BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CA74BL;;AA84BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAl5BL;;AAm5BT;;;AAGG;AACH,oBAAc,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAv5BL;;AAw5BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAACU,OAAD;AAApB,OAAD,CA55BT;;AA65BT;;;AAGG;AACH,sBAAgB,CAAC;AAAE2F,cAAM,EAAM7E,uBAAa,EAAbA,EAAe,CAAE,QAAF,CAAfA;AAAd,OAAD,CAj6BP;;AAk6BT;;;AAGG;AACH,kBAAY,CAAC;AAAE,oBAAY,CAACxB,WAAD;AAAd,OAAD,CAt6BH;;AAu6BT;;;AAGG;AACH,0BAAoB,CAAC,kBAAD,CA36BX;;AA46BT;;;AAGG;AACH,kBAAY,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAh7BH;;AAi7BT;;;AAGG;AACH,0BAAoB,CAAC,kBAAD,CAr7BX;;AAs7BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAACU,OAAD;AAApB,OAAD,CA17BT;;AA27BT;;;AAGG;AACH,sBAAgB,CAAC;AAAE4F,cAAM,EAAE9E,aAAa;AAAvB,OAAD,CA/7BP;;AAg8BT;;;AAGG;AACH,sBAAgB,CAAC;AAAE6E,cAAM,EAAE,CAACxG,WAAD;AAAV,OAAD,CAp8BP;;AAq8BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAz8BT;;AA08BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CA98BT;;AA+8BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAn9BT;;AAo9BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAx9BT;;AAy9BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CA79BT;;AA89BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,oBAAY,CAACA,WAAD;AAAd,OAAD,CAl+BT;;AAm+BT;;;AAGG;AACH,sBAAgB,CAAC;AAAEyG,cAAM,EAAE,CAACzG,WAAD;AAAV,OAAD,CAv+BP;;AAw+BT;;;AAGG;AACH,uBAAiB,CAAC;AAAE0G,eAAO,EAAG,KAAO/E,MAAP,CAAOA,aAAa,EAApB;AAAZ,OAAD,CA5+BR;;AA6+BT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAACzD,QAAD;AAApB,OAAD,CAj/BT;;AAk/BT;;;AAGG;AACH,mBAAa,CAAC;AAAEwI,eAAO,EAAE,CAACxI,QAAD;AAAX,OAAD,CAt/BJ;;AAu/BT;;;AAGG;AACH,uBAAiB,CAAC;AAAEwI,eAAO,EAAE,CAAC9G,MAAD;AAAX,OAAD,CA3/BR;;AA4/BT;;;AAGG;AACH,gBAAU,CAAC;AAAE+G,YAAI,EAAEnF,kBAAkB;AAA1B,OAAD,CAhgCD;;AAigCT;;;AAGG;AACH,sBAAgB,CAAC,YAAD,CArgCP;;AAsgCT;;;AAGG;AACH,oBAAc,CAAC;AAAEmF,YAAI,EAAE,CAAC/G,MAAD;AAAR,OAAD,CA1gCL;;AA2gCT;;;AAGG;AACH,sBAAgB,CAAC;AAAE,wBAAgB,CAACiB,OAAD;AAAlB,OAAD,CA/gCP;;AAghCT;;;AAGG;AACH,uBAAiB,CAAC;AAAE,uBAAe,CAAC3C,QAAD;AAAjB,OAAD,CAphCR;;AAqhCT;;;AAGG;AACH,2BAAqB,CAAC;AAAE,uBAAe,CAAC0B,MAAD;AAAjB,OAAD,CAzhCZ;AA0hCT;;AACA;;;AAGG;AACHgH,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAAC,EAAD,EAAK,OAAL,EAAc,MAAd,EAAsBtH,YAAtB,EAAoCC,iBAApC;AAAV,OAAD,CA/hCC;;AAgiCT;;;AAGG;AACH,sBAAgB,CAAC;AAAEqH,cAAM,EAAE,CAACvH,KAAD;AAAV,OAAD,CApiCP;;AAqiCT;;;AAGG;AACHwB,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAACA,OAAD;AAAX,OAAD,CAziCA;;AA0iCT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAae,aAAa;AAA5B,OAAD,CA9iCJ;;AA+iCT;;;AAGG;AACH,kBAAY,CAAC;AAAE,oBAAYA,aAAa;AAA3B,OAAD,CAnjCH;AAojCT;;AACA;;;;AAIG;AACHtF,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAAC,EAAD,EAAK,MAAL;AAAV,OAAD,CA1jCC;;AA2jCT;;;AAGG;AACHwD,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE,CAACA,IAAD;AAAR,OAAD,CA/jCG;;AAgkCT;;;AAGG;AACHC,gBAAU,EAAE,CAAC;AAAEA,kBAAU,EAAE,CAACA,UAAD;AAAd,OAAD,CApkCH;;AAqkCT;;;AAGG;AACHK,cAAQ,EAAE,CAAC;AAAEA,gBAAQ,EAAE,CAACA,QAAD;AAAZ,OAAD,CAzkCD;;AA0kCT;;;AAGG;AACH,qBAAe,CAAC;AAAE,uBAAe,CAAC,EAAD,EAAK,MAAL,EAAad,YAAb,EAA2BF,gBAA3B;AAAjB,OAAD,CA9kCN;;AA+kCT;;;AAGG;AACHiB,eAAS,EAAE,CAAC;AAAEA,iBAAS,EAAE,CAACA,SAAD;AAAb,OAAD,CAnlCF;;AAolCT;;;AAGG;AACH,oBAAc,CAAC;AAAE,sBAAc,CAACC,SAAD;AAAhB,OAAD,CAxlCL;;AAylCT;;;AAGG;AACHC,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAACA,MAAD;AAAV,OAAD,CA7lCC;;AA8lCT;;;AAGG;AACHQ,cAAQ,EAAE,CAAC;AAAEA,gBAAQ,EAAE,CAACA,QAAD;AAAZ,OAAD,CAlmCD;;AAmmCT;;;AAGG;AACHE,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAACA,KAAD;AAAT,OAAD,CAvmCE;;AAwmCT;;;;AAIG;AACH,yBAAmB,CAAC;AAAE,2BAAmB,CAAC,EAAD,EAAK,MAAL;AAArB,OAAD,CA7mCV;;AA8mCT;;;AAGG;AACH,uBAAiB,CAAC;AAAE,yBAAiB,CAACnB,IAAD;AAAnB,OAAD,CAlnCR;;AAmnCT;;;AAGG;AACH,6BAAuB,CAAC;AAAE,+BAAuB,CAACC,UAAD;AAAzB,OAAD,CAvnCd;;AAwnCT;;;AAGG;AACH,2BAAqB,CAAC;AAAE,6BAAqB,CAACK,QAAD;AAAvB,OAAD,CA5nCZ;;AA6nCT;;;AAGG;AACH,4BAAsB,CAAC;AAAE,8BAAsB,CAACC,SAAD;AAAxB,OAAD,CAjoCb;;AAkoCT;;;AAGG;AACH,6BAAuB,CAAC;AAAE,+BAAuB,CAACC,SAAD;AAAzB,OAAD,CAtoCd;;AAuoCT;;;AAGG;AACH,yBAAmB,CAAC;AAAE,2BAAmB,CAACC,MAAD;AAArB,OAAD,CA3oCV;;AA4oCT;;;AAGG;AACH,0BAAoB,CAAC;AAAE,4BAAoB,CAACM,OAAD;AAAtB,OAAD,CAhpCX;;AAipCT;;;AAGG;AACH,2BAAqB,CAAC;AAAE,6BAAqB,CAACE,QAAD;AAAvB,OAAD,CArpCZ;;AAspCT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAACE,KAAD;AAApB,OAAD,CA1pCT;AA2pCT;;AACA;;;AAGG;AACH,yBAAmB,CAAC;AAAEuF,cAAM,EAAE,CAAC,UAAD,EAAa,UAAb;AAAV,OAAD,CAhqCV;;AAiqCT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAACtG,aAAD;AAApB,OAAD,CArqCT;;AAsqCT;;;AAGG;AACH,0BAAoB,CAAC;AAAE,4BAAoB,CAACA,aAAD;AAAtB,OAAD,CA1qCX;;AA2qCT;;;AAGG;AACH,0BAAoB,CAAC;AAAE,4BAAoB,CAACA,aAAD;AAAtB,OAAD,CA/qCX;;AAgrCT;;;AAGG;AACH,sBAAgB,CAAC;AAAE2G,aAAK,EAAE,CAAC,MAAD,EAAS,OAAT;AAAT,OAAD,CAprCP;;AAqrCT;;;AAGG;AACHC,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAAC,KAAD,EAAQ,QAAR;AAAX,OAAD,CAzrCA;AA0rCT;;AACA;;;AAGG;AACHC,gBAAU,EAAE,CACR;AACIA,kBAAU,EAAE,CACR,MADQ,EAER,KAFQ,EAGR,EAHQ,EAIR,QAJQ,EAKR,SALQ,EAMR,QANQ,EAOR,WAPQ,EAQR3H,gBARQ;AADhB,OADQ,CA/rCH;;AA6sCT;;;AAGG;AACH4H,cAAQ,EAAE,CAAC;AAAEA,gBAAQ,EAAE/E,qBAAqB;AAAjC,OAAD,CAjtCD;;AAktCT;;;AAGG;AACHgF,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,EAAwB,QAAxB,EAAkC7H,gBAAlC;AAAR,OAAD,CAttCG;;AAutCT;;;AAGG;AACH8H,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAEjF,qBAAqB;AAA9B,OAAD,CA3tCE;;AA4tCT;;;AAGG;AACHkF,aAAO,EAAE,CAAC;AAAEA,eAAO,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C/H,gBAA5C;AAAX,OAAD,CAhuCA;AAiuCT;;AACA;;;AAGG;AACHgI,eAAS,EAAE,CAAC;AAAEA,iBAAS,EAAE,CAAC,EAAD,EAAK,KAAL,EAAY,MAAZ;AAAb,OAAD,CAtuCF;;AAuuCT;;;AAGG;AACHpG,WAAK,EAAE,CAAC;AAAEA,aAAK,EAAE,CAACA,KAAD;AAAT,OAAD,CA3uCE;;AA4uCT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAACA,KAAD;AAAb,OAAD,CAhvCF;;AAivCT;;;AAGG;AACH,iBAAW,CAAC;AAAE,mBAAW,CAACA,KAAD;AAAb,OAAD,CArvCF;;AAsvCT;;;AAGG;AACHqG,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAACnI,SAAD,EAAYE,gBAAZ;AAAV,OAAD,CA1vCC;;AA2vCT;;;AAGG;AACH,qBAAe,CAAC;AAAE,uBAAe,CAACgC,SAAD;AAAjB,OAAD,CA/vCN;;AAgwCT;;;AAGG;AACH,qBAAe,CAAC;AAAE,uBAAe,CAACA,SAAD;AAAjB,OAAD,CApwCN;;AAqwCT;;;AAGG;AACH,gBAAU,CAAC;AAAE,kBAAU,CAACF,IAAD;AAAZ,OAAD,CAzwCD;;AA0wCT;;;AAGG;AACH,gBAAU,CAAC;AAAE,kBAAU,CAACA,IAAD;AAAZ,OAAD,CA9wCD;;AA+wCT;;;AAGG;AACH,0BAAoB,CAChB;AACIoG,cAAM,EAAE,CACJ,QADI,EAEJ,KAFI,EAGJ,WAHI,EAIJ,OAJI,EAKJ,cALI,EAMJ,QANI,EAOJ,aAPI,EAQJ,MARI,EASJ,UATI,EAUJlI,gBAVI;AADZ,OADgB,CAnxCX;AAmyCT;;AACA;;;AAGG;AACHmI,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAAC,MAAD,EAAS3H,MAAT;AAAV,OAAD,CAxyCC;;AAyyCT;;;AAGG;AACH4H,gBAAU,EAAE,CAAC,iBAAD,CA7yCH;;AA8yCT;;;AAGG;AACHC,YAAM,EAAE,CACJ;AACIA,cAAM,EAAE,CACJ,MADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,MAJI,EAKJ,MALI,EAMJ,MANI,EAOJ,MAPI,EAQJ,aARI,EASJ,MATI,EAUJ,cAVI,EAWJ,UAXI,EAYJ,MAZI,EAaJ,WAbI,EAcJ,eAdI,EAeJ,OAfI,EAgBJ,MAhBI,EAiBJ,SAjBI,EAkBJ,MAlBI,EAmBJ,UAnBI,EAoBJ,YApBI,EAqBJ,YArBI,EAsBJ,YAtBI,EAuBJ,UAvBI,EAwBJ,UAxBI,EAyBJ,UAzBI,EA0BJ,UA1BI,EA2BJ,WA3BI,EA4BJ,WA5BI,EA6BJ,WA7BI,EA8BJ,WA9BI,EA+BJ,WA/BI,EAgCJ,WAhCI,EAiCJ,aAjCI,EAkCJ,aAlCI,EAmCJ,SAnCI,EAoCJ,UApCI,EAqCJrI,gBArCI;AADZ,OADI,CAlzCC;;AA61CT;;;AAGG;AACH,qBAAe,CAAC;AAAEsI,aAAK,EAAE,CAAC9H,MAAD;AAAT,OAAD,CAj2CN;;AAk2CT;;;AAGG;AACH,wBAAkB,CAAC;AAAE,0BAAkB,CAAC,MAAD,EAAS,MAAT;AAApB,OAAD,CAt2CT;;AAu2CT;;;AAGG;AACH+H,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB;AAAV,OAAD,CA32CC;;AA42CT;;;AAGG;AACH,yBAAmB,CAAC;AAAEC,cAAM,EAAE,CAAC,MAAD,EAAS,QAAT;AAAV,OAAD,CAh3CV;;AAi3CT;;;AAGG;AACH,kBAAY,CAAC;AAAE,oBAAY,CAAC/H,OAAD;AAAd,OAAD,CAr3CH;;AAs3CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA13CJ;;AA23CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA/3CJ;;AAg4CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAp4CJ;;AAq4CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAz4CJ;;AA04CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA94CJ;;AA+4CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAn5CJ;;AAo5CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAx5CJ;;AAy5CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA75CJ;;AA85CT;;;AAGG;AACH,kBAAY,CAAC;AAAE,oBAAY,CAACA,OAAD;AAAd,OAAD,CAl6CH;;AAm6CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAv6CJ;;AAw6CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA56CJ;;AA66CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAj7CJ;;AAk7CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAt7CJ;;AAu7CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA37CJ;;AA47CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAh8CJ;;AAi8CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CAr8CJ;;AAs8CT;;;AAGG;AACH,mBAAa,CAAC;AAAE,qBAAa,CAACA,OAAD;AAAf,OAAD,CA18CJ;;AA28CT;;;AAGG;AACH,oBAAc,CAAC;AAAEgI,YAAI,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,YAA3B;AAAR,OAAD,CA/8CL;;AAg9CT;;;AAGG;AACH,mBAAa,CAAC;AAAEA,YAAI,EAAE,CAAC,QAAD,EAAW,QAAX;AAAR,OAAD,CAp9CJ;;AAq9CT;;;AAGG;AACH,mBAAa,CAAC;AAAEA,YAAI,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,EAAmB,MAAnB;AAAR,OAAD,CAz9CJ;;AA09CT;;;AAGG;AACH,yBAAmB,CAAC;AAAEA,YAAI,EAAE,CAAC,WAAD,EAAc,WAAd;AAAR,OAAD,CA99CV;;AA+9CT;;;AAGG;AACHC,WAAK,EAAE,CACH;AACIA,aAAK,EAAE,CACH,MADG,EAEH,MAFG,EAGH,YAHG,EAIH,cAJG,EAKH;AAAEC,aAAG,EAAE,CAAC,GAAD,EAAM,MAAN,EAAc,OAAd,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,MAAlC;AAAP,SALG;AADX,OADG,CAn+CE;;AA8+CT;;;AAGG;AACHC,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB;AAAV,OAAD,CAl/CC;;AAm/CT;;;AAGG;AACH,qBAAe,CACX;AAAE,uBAAe,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,WAA/B,EAA4C5I,gBAA5C;AAAjB,OADW,CAv/CN;AA0/CT;;AACA;;;AAGG;AACH6I,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE,CAACrI,MAAD,EAAS,MAAT;AAAR,OAAD,CA//CG;;AAggDT;;;AAGG;AACH,kBAAY,CAAC;AAAEsI,cAAM,EAAE,CAAChK,QAAD,EAAWU,iBAAX;AAAV,OAAD,CApgDH;;AAqgDT;;;AAGG;AACHsJ,YAAM,EAAE,CAAC;AAAEA,cAAM,EAAE,CAACtI,MAAD,EAAS,MAAT;AAAV,OAAD,CAzgDC;AA0gDT;;AACA;;;AAGG;AACHuI,QAAE,EAAE,CAAC,SAAD,EAAY,aAAZ;AA/gDK,KA7BV;AA8iDHzS,0BAAsB,EAAE;AACpBgN,cAAQ,EAAE,CAAC,YAAD,EAAe,YAAf,CADU;AAEpBC,gBAAU,EAAE,CAAC,cAAD,EAAiB,cAAjB,CAFQ;AAGpBhC,WAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,KAAhC,EAAuC,KAAvC,EAA8C,OAA9C,EAAuD,QAAvD,EAAiE,MAAjE,CAHa;AAIpB,iBAAW,CAAC,OAAD,EAAU,MAAV,CAJS;AAKpB,iBAAW,CAAC,KAAD,EAAQ,QAAR,CALS;AAMpB2C,UAAI,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CANc;AAOpB9C,SAAG,EAAE,CAAC,OAAD,EAAU,OAAV,CAPe;AAQpB0D,OAAC,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CARiB;AASpBC,QAAE,EAAE,CAAC,IAAD,EAAO,IAAP,CATgB;AAUpBC,QAAE,EAAE,CAAC,IAAD,EAAO,IAAP,CAVgB;AAWpBO,OAAC,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAXiB;AAYpBC,QAAE,EAAE,CAAC,IAAD,EAAO,IAAP,CAZgB;AAapBC,QAAE,EAAE,CAAC,IAAD,EAAO,IAAP,CAbgB;AAcpB,mBAAa,CAAC,SAAD,CAdO;AAepB,oBAAc,CACV,aADU,EAEV,kBAFU,EAGV,YAHU,EAIV,aAJU,EAKV,cALU,CAfM;AAsBpB,qBAAe,CAAC,YAAD,CAtBK;AAuBpB,0BAAoB,CAAC,YAAD,CAvBA;AAwBpB,oBAAc,CAAC,YAAD,CAxBM;AAyBpB,qBAAe,CAAC,YAAD,CAzBK;AA0BpB,sBAAgB,CAAC,YAAD,CA1BI;AA2BpB0B,aAAO,EAAE,CACL,WADK,EAEL,WAFK,EAGL,WAHK,EAIL,WAJK,EAKL,WALK,EAML,WANK,EAOL,YAPK,EAQL,YARK,EASL,YATK,EAUL,YAVK,EAWL,YAXK,EAYL,YAZK,EAaL,YAbK,EAcL,YAdK,CA3BW;AA2CpB,mBAAa,CAAC,YAAD,EAAe,YAAf,CA3CO;AA4CpB,mBAAa,CAAC,YAAD,EAAe,YAAf,CA5CO;AA6CpB,mBAAa,CAAC,YAAD,EAAe,YAAf,CA7CO;AA8CpB,mBAAa,CAAC,YAAD,EAAe,YAAf,CA9CO;AA+CpB,mBAAa,CAAC,YAAD,EAAe,YAAf,CA/CO;AAgDpB,mBAAa,CAAC,YAAD,EAAe,YAAf,CAhDO;AAiDpB,wBAAkB,CAAC,kBAAD,EAAqB,kBAArB,CAjDE;AAkDpB,kBAAY,CACR,YADQ,EAER,YAFQ,EAGR,YAHQ,EAIR,YAJQ,EAKR,YALQ,EAMR,YANQ,CAlDQ;AA0DpB,oBAAc,CAAC,YAAD,EAAe,YAAf,CA1DM;AA2DpB,oBAAc,CAAC,YAAD,EAAe,YAAf,CA3DM;AA4DpB,sBAAgB,CACZ,gBADY,EAEZ,gBAFY,EAGZ,gBAHY,EAIZ,gBAJY,CA5DI;AAkEpB,wBAAkB,CAAC,gBAAD,EAAmB,gBAAnB,CAlEE;AAmEpB,wBAAkB,CAAC,gBAAD,EAAmB,gBAAnB,CAnEE;AAoEpB,kBAAY,CACR,WADQ,EAER,WAFQ,EAGR,WAHQ,EAIR,WAJQ,EAKR,WALQ,EAMR,WANQ,EAOR,WAPQ,EAQR,WARQ,CApEQ;AA8EpB,mBAAa,CAAC,WAAD,EAAc,WAAd,CA9EO;AA+EpB,mBAAa,CAAC,WAAD,EAAc,WAAd,CA/EO;AAgFpB,kBAAY,CACR,WADQ,EAER,WAFQ,EAGR,WAHQ,EAIR,WAJQ,EAKR,WALQ,EAMR,WANQ,EAOR,WAPQ,EAQR,WARQ,CAhFQ;AA0FpB,mBAAa,CAAC,WAAD,EAAc,WAAd,CA1FO;AA2FpB,mBAAa,CAAC,WAAD,EAAc,WAAd;AA3FO,KA9iDrB;AA2oDH3Q,kCAA8B,EAAE;AAC5B,mBAAa,CAAC,SAAD;AADe;AA3oD7B,GAAP;AA+oDJ;;ICvuDawS,OAAO,gBAAGC,mBAAmB,CAAC1I,gBAAD;ACD1C;;;AAGG;;AACa,sBAAa2I,UAAb,EAAiCC,eAAjC,EAAiE;AAC7E,OAAK,IAAMzP,GAAX,IAAkByP,eAAlB,EAAmC;AAC/BC,4BAAwB,CAACF,UAAD,EAAoBxP,GAApB,EAAyByP,eAAe,CAACzP,GAAD,CAAxC,CAAxB0P;AACH;;AAED,SAAOF,UAAP;AACJ;;AAEA,IAAMG,cAAc,GAAGxQ,MAAM,CAACyQ,SAAPzQ,CAAiBwQ,cAAxC;AACA,IAAME,aAAa,gBAAG,IAAI7M,GAAJ,CAAQ,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAR,CAAtB;;AAEA,SAAS0M,wBAAT,CACII,UADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAGuB;AAEnB,MACI,CAACL,cAAc,CAACM,IAAfN,CAAoBG,UAApBH,EAAgCI,QAAhCJ,CAAD,IACAE,aAAa,CAACzP,GAAdyP,CAAkB,OAAOG,UAAzBH,CADA,IAEAG,UAAU,KAAK,IAHnB,EAIE;AACEF,cAAU,CAACC,QAAD,CAAVD,GAAuBE,UAAvBF;AACA;AACH;;AAED,MAAII,KAAK,CAACC,OAAND,CAAcF,UAAdE,KAA6BA,KAAK,CAACC,OAAND,CAAcJ,UAAU,CAACC,QAAD,CAAxBG,CAAjC,EAAsE;AAClEJ,cAAU,CAACC,QAAD,CAAVD,GAAwBA,UAAU,CAACC,QAAD,CAAVD,CAAmC7E,MAAnC6E,CAA0CE,UAA1CF,CAAxBA;AACA;AACH;;AAED,MAAI,OAAOE,UAAP,KAAsB,QAAtB,IAAkC,OAAOF,UAAU,CAACC,QAAD,CAAjB,KAAgC,QAAtE,EAAgF;AAC5E,QAAID,UAAU,CAACC,QAAD,CAAVD,KAAyB,IAA7B,EAAmC;AAC/BA,gBAAU,CAACC,QAAD,CAAVD,GAAuBE,UAAvBF;AACA;AACH;;AAED,SAAK,IAAMM,OAAX,IAAsBJ,UAAtB,EAAkC;AAC9BN,8BAAwB,CACpBI,UAAU,CAACC,QAAD,CADU,EAEpBK,OAFoB,EAGpBJ,UAAU,CAACI,OAAD,CAHU,CAAxBV;AAKH;AACJ;AACL;;SC3CgBW,oBACZZ,iBACyC;AAAA,oCAAtC5L,YAAsC;AAAtCA,gBAAsC,UAAtCA,GAAsC3H,eAAtC2H;AAAsC;;AAEzC,SAAO,OAAO4L,eAAP,KAA2B,UAA3B,GACDF,mBAAmB,MAAnBA,CAAmB,MAAnBA,EAAmB,CAAC1I,gBAAD,EAAmB4I,eAAnB,EAAuC5L,MAAvC,CAAuCA,YAAvC,CAAnB0L,CADC,GAEDA,mBAAmB,CACf9M,KADJ8M,CACI,MADJA,EACI;AAAA,WAAMe,YAAY,CAACzJ,gBAAgB,EAAjB,EAAqB4I,eAArB,CAAlB;AAAuD,GAAvD,EAAuDxE,MAAvD,CACGpH,YADH,CADJ0L,CAFN;AAMJ;ACLA;;AAEG;;;AACI,IAAMnR,IAAI,GAAGvC,MAAb","names":["twJoin","index","argument","resolvedValue","string","arguments","length","toValue","mix","k","CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","conflictingClassGroups","_config$conflictingCl","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","_ref2","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","_ref3","key","path","currentClassPartObject","pathPart","has","set","func","classGroupEntries","map","_ref4","prefixedClassGroup","fromEntries","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","splitModifiers","modifiers","bracketDepth","modifierStart","postfixModifierPosition","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","apply","sort","createConfigUtils","SPLIT_CLASSES_REGEX","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","Boolean","isTailwindClass","variantModifier","modifierId","reverse","filter","parsed","classId","add","group","createConfig","cacheGet","cacheSet","functionToCall","initTailwindMerge","firstCreateConfig","restCreateConfig","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","mergeClassList","callTailwindMerge","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitrarySize","isNever","isArbitraryPosition","isArbitraryUrl","isUrl","isArbitraryNumber","isArbitraryWeight","Number","isNaN","isPercent","endsWith","isInteger","isIntegerOnly","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow","isShadow","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAuto","getLengthWithEmpty","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","aspect","container","columns","box","display","clear","isolation","object","overflow","overscroll","position","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","concat","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","hyphens","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","caption","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","pan","select","fill","stroke","sr","twMerge","createTailwindMerge","baseConfig","configExtension","mergePropertyRecursively","hasOwnProperty","prototype","overrideTypes","baseObject","mergeKey","mergeValue","call","Array","isArray","nextKey","extendTailwindMerge","mergeConfigs"],"sources":["C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\tw-join.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\class-utils.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\lru-cache.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\modifier-utils.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\config-utils.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\merge-classlist.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\create-tailwind-merge.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\from-theme.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\validators.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\default-config.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\tw-merge.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\merge-configs.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\lib\\extend-tailwind-merge.ts","C:\\Users\\Dell\\MERN-authentication-profile\\client\\node_modules\\tailwind-merge\\src\\index.ts"],"sourcesContent":["/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { ClassGroup, ClassGroupId, ClassValidator, Config, ThemeGetter, ThemeObject } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers = {} } = config\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId, hasPostfixModifier: boolean) {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { Config } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: Config) {\n    const separator = config.separator || ':'\n    const isSeparatorSingleCharacter = separator.length === 1\n    const firstSeparatorCharacter = separator[0]\n    const separatorLength = separator.length\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0) {\n                if (\n                    currentCharacter === firstSeparatorCharacter &&\n                    (isSeparatorSingleCharacter ||\n                        className.slice(index, index + separatorLength) === separator)\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separatorLength\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n","import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { Config } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const {\n                    modifiers,\n                    hasImportantModifier,\n                    baseClassName,\n                    maybePostfixModifierPosition,\n                } = splitModifiers(originalClassName)\n\n                let classGroupId = getClassGroupId(\n                    maybePostfixModifierPosition\n                        ? baseClassName.substring(0, maybePostfixModifierPosition)\n                        : baseClassName,\n                )\n\n                let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\n\n                if (!classGroupId) {\n                    if (!maybePostfixModifierPosition) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    classGroupId = getClassGroupId(baseClassName)\n\n                    if (!classGroupId) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    hasPostfixModifier = false\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                    hasPostfixModifier,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId, hasPostfixModifier } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { Config } from './types'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig(),\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(value: string) {\n    return (\n        isNumber(value) ||\n        stringLengths.has(value) ||\n        fractionRegex.test(value) ||\n        isArbitraryLength(value)\n    )\n}\n\nexport function isArbitraryLength(value: string) {\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\n}\n\nexport function isArbitrarySize(value: string) {\n    return getIsArbitraryValue(value, 'size', isNever)\n}\n\nexport function isArbitraryPosition(value: string) {\n    return getIsArbitraryValue(value, 'position', isNever)\n}\n\nexport function isArbitraryUrl(value: string) {\n    return getIsArbitraryValue(value, 'url', isUrl)\n}\n\nexport function isArbitraryNumber(value: string) {\n    return getIsArbitraryValue(value, 'number', isNumber)\n}\n\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nexport const isArbitraryWeight = isArbitraryNumber\n\nexport function isNumber(value: string) {\n    return !Number.isNaN(Number(value))\n}\n\nexport function isPercent(value: string) {\n    return value.endsWith('%') && isNumber(value.slice(0, -1))\n}\n\nexport function isInteger(value: string) {\n    return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly)\n}\n\nexport function isArbitraryValue(value: string) {\n    return arbitraryValueRegex.test(value)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(value: string) {\n    return tshirtUnitRegex.test(value)\n}\n\nexport function isArbitraryShadow(value: string) {\n    return getIsArbitraryValue(value, '', isShadow)\n}\n\nfunction getIsArbitraryValue(value: string, label: string, testValue: (value: string) => boolean) {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return result[1] === label\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nfunction isLengthOnly(value: string) {\n    return lengthUnitRegex.test(value)\n}\n\nfunction isNever() {\n    return false\n}\n\nfunction isUrl(value: string) {\n    return value.startsWith('url(')\n}\n\nfunction isIntegerOnly(value: string) {\n    return Number.isInteger(Number(value))\n}\n\nfunction isShadow(value: string) {\n    return shadowRegex.test(value)\n}\n","import { fromTheme } from './from-theme'\nimport { Config } from './types'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAuto = () => ['auto', spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumber = () => [isNumber, isArbitraryNumber]\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryLength],\n            brightness: getNumber(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n            borderSpacing: [spacing],\n            borderWidth: getLengthWithEmpty(),\n            contrast: getNumber(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: [spacing],\n            gradientColorStops: [colors],\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: getNumber(),\n            padding: [spacing],\n            saturate: getNumber(),\n            scale: getNumber(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: [spacing],\n            translate: [spacing],\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: [inset] }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: [spacing] }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: [padding] }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: [margin] }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', 'fit', spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: [spacing, 'auto', 'min', 'max', 'fit'] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                { leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength] },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: [spacing] }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': [borderWidth] }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Beldn Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': [spacing] }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': [spacing] }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': [spacing] }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': [spacing] }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': [spacing] }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': [spacing] }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': [spacing] }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': [spacing] }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': [spacing] }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': [spacing] }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': [spacing] }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': [spacing] }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': [spacing] }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': [spacing] }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': [spacing] }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': [spacing] }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': [spacing] }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': [spacing] }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n    } as const satisfies Config\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n","import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown,\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object],\n            )\n        }\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n","import { twJoin } from './lib/tw-join'\n\nexport { twMerge } from './lib/tw-merge'\nexport { twJoin } from './lib/tw-join'\nexport { getDefaultConfig } from './lib/default-config'\nexport { extendTailwindMerge } from './lib/extend-tailwind-merge'\nexport { createTailwindMerge } from './lib/create-tailwind-merge'\nexport type { Config } from './lib/types'\nexport * as validators from './lib/validators'\nexport { mergeConfigs } from './lib/merge-configs'\nexport { fromTheme } from './lib/from-theme'\n\n/**\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\n */\nexport const join = twJoin\n"]},"metadata":{},"sourceType":"script"}